{
  "ua": [
    "FF01",
    "GC02",
    "WK01",
    "WK02"
  ],
  "results": {
    "/wai-aria/alertdialog_modal_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "alertdialog modal false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is web alert dialog\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "alertdialog modal false 1": {
          "stNum": 1,
          "byUA": {
            "GC02": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/alertdialog_modal_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "alertdialog modal true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is web alert dialog\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "alertdialog modal true 1": {
          "stNum": 1,
          "byUA": {
            "GC02": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property accessible is false\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/application_activedescendant-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "application activedescendant": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXSubrole is AXWebApplication\" failed ; \"property AXRoleDescription is web application\" failed ;  expected true got false",
            "WK01": "assert_true: \"property states doesNotContain STATE_FOCUSED\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is false\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "application activedescendant 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_FOCUSABLE\" failed https://bugzil.la/1359045: 1359045 - A container\\'s active descendant should expose ATK_STATE_FOCUSABLE in addition to ATK_STATE_FOCUSED;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed ;  expected true got false",
            "WK01": "assert_true: \"property states contains STATE_FOCUSED\" failed ; \"property states contains STATE_FOCUSABLE\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is true\" failed ; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/application_activedescendant_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "application activedescendant value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXSubrole is AXWebApplication\" failed ; \"property AXRoleDescription is web application\" failed ; \"event type is AXSelectedChildrenChanged\" failed ;  expected true got false",
            "WK01": "assert_true: \"property states doesNotContain STATE_FOCUSED\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is false\" failed ; \"event type is AXSelectedChildrenChanged\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "application activedescendant value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_FOCUSABLE\" failed https://bugzil.la/1359045: 1359045 - A container\\'s active descendant should expose ATK_STATE_FOCUSABLE in addition to ATK_STATE_FOCUSED;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed ;  expected true got false",
            "WK01": "assert_true: \"property states contains STATE_FOCUSED\" failed ; \"property states contains STATE_FOCUSABLE\" failed ; \"event type is object:state-changed:focused\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is true\" failed ; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed ; \"event type is AXFocusedUIElementChanged\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/aria-current_not_declared-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current not declared": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXARIACurrent is false\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current with value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"event type is object:state-changed:active\" failed https://bugzil.la/1355921;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent contains false\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_date-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current with value date": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_ACTIVE\" failed https://bugzil.la/1355921: 1355921 - Elements with a defined, non-false value for aria-current should expose ATK_STATE_ACTIVE;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is date\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_location-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current with value location": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_ACTIVE\" failed https://bugzil.la/1355921: 1355921 - Elements with a defined, non-false value for aria-current should expose ATK_STATE_ACTIVE;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is location\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_page-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current with value page": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_ACTIVE\" failed https://bugzil.la/1355921: 1355921 - Elements with a defined, non-false value for aria-current should expose ATK_STATE_ACTIVE;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is page\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_step-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current with value step": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_ACTIVE\" failed https://bugzil.la/1355921: 1355921 - Elements with a defined, non-false value for aria-current should expose ATK_STATE_ACTIVE;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is step\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_time-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current with value time": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_ACTIVE\" failed https://bugzil.la/1355921: 1355921 - Elements with a defined, non-false value for aria-current should expose ATK_STATE_ACTIVE;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is time\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current with value true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_ACTIVE\" failed https://bugzil.la/1355921: 1355921 - Elements with a defined, non-false value for aria-current should expose ATK_STATE_ACTIVE;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is true\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-current with value unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXARIACurrent is false\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/aria-details_pointing_to_details_element-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-details pointing to details element": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"relation RELATION_DETAILS is details\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781591: Bug 781591 – Add details and details-for relation types;  expected true got false",
            "GC02": "assert_true: \"property TBD is TBD\" failed ;  expected true got false",
            "WK01": "assert_true: \"relation RELATION_DETAILS is details\" failed ERROR: Object not found https://bugzilla.gnome.org/show_bug.cgi?id=781591: Bug 781591 – Add details and details-for relation types;  expected true got false",
            "WK02": "assert_true: \"property TBD is TBD\" failed https://webkit.org/b/165842;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        },
        "aria-details pointing to details element 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"relation RELATION_DETAILS_FOR is test\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781591: Bug 781591 – Add details and details-for relation types;  expected true got false",
            "WK01": "assert_true: \"relation RELATION_DETAILS_FOR is test\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781591: Bug 781591 – Add details and details-for relation types;  expected true got false"
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-details_pointing_to_div_element-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "aria-details pointing to div element": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"relation RELATION_DETAILS is details\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781591: Bug 781591 – Add details and details-for relation types;  expected true got false",
            "GC02": "assert_true: \"property TBD is TBD\" failed ;  expected true got false",
            "WK01": "assert_true: \"relation RELATION_DETAILS is details\" failed ERROR: Object not found https://bugzilla.gnome.org/show_bug.cgi?id=781591: Bug 781591 – Add details and details-for relation types;  expected true got false",
            "WK02": "assert_true: \"property TBD is TBD\" failed https://webkit.org/b/165842;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        },
        "aria-details pointing to div element 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"relation RELATION_DETAILS_FOR is test\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781591: Bug 781591 – Add details and details-for relation types;  expected true got false",
            "WK01": "assert_true: \"relation RELATION_DETAILS_FOR is test\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781591: Bug 781591 – Add details and details-for relation types;  expected true got false"
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/article_in_feed_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "article in feed posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_ARTICLE\" failed https://bugzil.la/1305446: 1305446 - Expose ARIA \"article\" role as ROLE_ARTICLE and \"log\" role as ROLE_LOG;  expected true got false",
            "GC02": "assert_true: \"property AXARIAPosInSet is 4\" failed ; \"property AXARIASetSize is 8\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/article_in_feed_setsize_-1-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "article in feed setsize -1": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_ARTICLE\" failed https://bugzil.la/1305446: 1305446 - Expose ARIA \"article\" role as ROLE_ARTICLE and \"log\" role as ROLE_LOG; \"property objectAttributes contains setsize:-1\" failed https://bugzil.la/1358473: 1358473 - Do not calculate setsize when aria-setsize has a value of -1;  expected true got false",
            "GC02": "assert_true: \"property AXARIASetSize is -1\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/article_not_in_feed_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "article not in feed posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_ARTICLE\" failed https://bugzil.la/1305446: 1305446 - Expose ARIA \"article\" role as ROLE_ARTICLE and \"log\" role as ROLE_LOG;  expected true got false",
            "GC02": "assert_true: \"property AXARIAPosInSet is 4\" failed ; \"property AXARIASetSize is 8\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_dialog-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup dialog": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains haspopup:dialog\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute; \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed ; \"property AXRoleDescription is pop up button\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_emptystring-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup emptystring": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains haspopup:false\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute;  expected true got false",
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/button_haspopup_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_foo-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup foo": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains haspopup:false\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute;  expected true got false",
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/button_haspopup_grid-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup grid": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains haspopup:grid\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute; \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed ; \"property AXRoleDescription is pop up button\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_listbox-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup listbox": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains haspopup:listbox\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute; \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed ; \"property AXRoleDescription is pop up button\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_menu-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup menu": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains haspopup:menu\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute; \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed ; \"property AXRoleDescription is pop up button\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_tree-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup tree": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains haspopup:tree\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute; \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed ; \"property AXRoleDescription is pop up button\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/button_haspopup_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button haspopup unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/button_roledescription_empty-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button roledescription empty": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is button\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXRoleDescription is button\" failed https://webkit.org/b/163647: 163647 – AX: don\\'t expose empty roledescription;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/button_roledescription_valid-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button roledescription valid": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/button_roledescription_whitespace_only-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "button roledescription whitespace only": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is button\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXRoleDescription is button\" failed https://webkit.org/b/163647: 163647 – AX: don\\'t expose empty roledescription;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/cell-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_columns() is 8\" failed https://bugzil.la/1356997: ;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnCount is 8\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_columns() is 8\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "cell 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://bugzil.la/1357188: ;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell aria-colspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed https://bugzil.la/1357013: ;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_td_html_colspan_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell aria-colspan 2 on td html colspan 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes doesNotContain colspan:2\" failed https://bugzil.la/1357153: ;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXCell\" failed ; \"property AXColumnIndexRange.length is 3\" failed ;  expected true got false",
            "WK01": "assert_true: \"property role is ROLE_TABLE_CELL\" failed https://webkit.org/b/171178: 171178 – AX: Treat cells with ARIA table cell properties as cells; \"result atk_table_cell_get_row_column_span() contains column_span=3\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan;  expected true got false",
            "WK02": "assert_true: \"property AXRole is AXCell\" failed https://webkit.org/b/171178: 171178 – AX: Treat cells with ARIA table cell properties as cells; \"property AXColumnIndexRange.length is 3\" failed https://webkit.org/b/171178: 171178 – AX: Treat cells with ARIA table cell properties as cells;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_td_html_colspan_3_with_headers_and_border-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell aria-colspan 2 on td html colspan 3 with headers and border": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes doesNotContain colspan:2\" failed https://bugzil.la/1357153: 1357153 - Ignore aria-{row,col}span values when host language {row,col}span attribute is present;  expected true got false",
            "WK01": "assert_true: \"property objectAttributes doesNotContain colspan:2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_td_with_html_colspan_not_specified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell aria-colspan 2 on td with html colspan not specified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed https://bugzil.la/1357013: ;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXCell\" failed ; \"property AXColumnIndexRange.length is 2\" failed ;  expected true got false",
            "WK01": "assert_true: \"property role is ROLE_TABLE_CELL\" failed https://webkit.org/b/171178: 171178 – AX: Treat cells with ARIA table cell properties as cells; \"property objectAttributes contains colspan:2\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan; \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan;  expected true got false",
            "WK02": "assert_true: \"property AXRole is AXCell\" failed https://webkit.org/b/171178: 171178 – AX: Treat cells with ARIA table cell properties as cells; \"property AXColumnIndexRange.length is 2\" failed https://webkit.org/b/171178: 171178 – AX: Treat cells with ARIA table cell properties as cells;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/cell_aria-rowspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell aria-rowspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed https://bugzil.la/1357013: ;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-rowspan_2_on_td_html_rowspan_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell aria-rowspan 2 on td html rowspan 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes doesNotContain rowspan:2\" failed https://bugzil.la/1357153: 1357153 - Ignore aria-{row,col}span values when host language {row,col}span attribute is present; \"result atk_table_cell_get_row_column_span() contains row_span=3\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 3\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_row_column_span() contains row_span=3\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan;  expected true got false",
            "WK02": "assert_true: \"property AXRowIndexRange.length is 3\" failed https://webkit.org/b/171214: 171214 – AX: aria-rowspan value should be ignored if td/th rowspan value is provided;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/cell_aria-rowspan_2_on_td_with_html_rowspan_not_specified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell aria-rowspan 2 on td with html rowspan not specified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed ;  expected true got false",
            "WK01": "assert_true: \"property objectAttributes contains rowspan:2\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan; \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan;  expected true got false",
            "WK02": "assert_true: \"property AXRowIndexRange.length is 2\" failed https://webkit.org/b/171214: 171214 – AX: aria-rowspan value should be ignored if td/th rowspan value is provided;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/cell_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/cell_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "cell rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/checkbox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "checkbox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/checkbox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "checkbox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states doesNotContain STATE_CHECKABLE\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY; \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/checkbox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "checkbox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-colspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader aria-colspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-colspan_2_on_th_html_colspan_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader aria-colspan 2 on th html colspan 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes doesNotContain colspan:2\" failed https://bugzil.la/1357153: 1357153 - Ignore aria-{row,col}span values when host language {row,col}span attribute is present;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 3\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_row_column_span() contains column_span=3\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan;  expected true got false",
            "WK02": "assert_true: \"property AXColumnIndexRange.length is 3\" failed https://webkit.org/b/171178: 171178 – AX: Treat cells with ARIA table cell properties as cells;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-colspan_2_on_th_with_html_colspan_not_specified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader aria-colspan 2 on th with html colspan not specified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed ;  expected true got false",
            "WK01": "assert_true: \"property objectAttributes contains colspan:2\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan; \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan;  expected true got false",
            "WK02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed https://webkit.org/b/171178: 171178 – AX: Treat cells with ARIA table cell properties as cells;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-rowspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader aria-rowspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-rowspan_2_on_th_html_rowspan_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader aria-rowspan 2 on th html rowspan 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes doesNotContain rowspan:2\" failed https://bugzil.la/1357153: 1357153 - Ignore aria-{row,col}span values when host language {row,col}span attribute is present; \"result atk_table_cell_get_row_column_span() contains row_span=3\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 3\" failed ;  expected true got false",
            "WK01": "assert_true: \"property objectAttributes doesNotContain rowspan:2\" failed ; \"result atk_table_cell_get_row_column_span() contains row_span=3\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan;  expected true got false",
            "WK02": "assert_true: \"property AXRowIndexRange.length is 3\" failed https://webkit.org/b/171214: 171214 – AX: aria-rowspan value should be ignored if td/th rowspan value is provided;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-rowspan_2_on_th_with_html_rowspan_not_specified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader aria-rowspan 2 on th with html rowspan not specified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed ;  expected true got false",
            "WK01": "assert_true: \"property objectAttributes contains rowspan:2\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan; \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed https://webkit.org/b/171165: 171165 – [ATK] Implement support for aria-rowspan and aria-colspan;  expected true got false",
            "WK02": "assert_true: \"property AXRowIndexRange.length is 2\" failed https://webkit.org/b/171214: 171214 – AX: aria-rowspan value should be ignored if td/th rowspan value is provided;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/columnheader_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/columnheader_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/columnheader_selected_false_not_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader selected false not automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXSelected is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/columnheader_selected_true_not_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "columnheader selected true not automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/combobox_controls_an_invalid_id-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox controls an invalid ID": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXLinkedUIElements doesNotContain myID\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "combobox controls an invalid ID 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "WK01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_dialog-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox haspopup dialog": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP; \"property objectAttributes contains haspopup:dialog\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute;  expected true got false",
            "GC02": "assert_true: \"property actions contains AXPress\" failed ;  expected true got false",
            "WK02": "assert_true: \"property actions contains AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox haspopup false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing; \"property actions doesNotContain AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_grid-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox haspopup grid": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP; \"property objectAttributes contains haspopup:grid\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute;  expected true got false",
            "GC02": "assert_true: \"property actions contains AXPress\" failed ;  expected true got false",
            "WK02": "assert_true: \"property actions contains AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_listbox-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox haspopup listbox": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP; \"property objectAttributes contains haspopup:listbox\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute;  expected true got false",
            "GC02": "assert_true: \"property actions contains AXPress\" failed ;  expected true got false",
            "WK02": "assert_true: \"property actions contains AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_menu-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox haspopup menu": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP; \"property objectAttributes contains haspopup:menu\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute;  expected true got false",
            "GC02": "assert_true: \"property actions contains AXPress\" failed ;  expected true got false",
            "WK02": "assert_true: \"property actions contains AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_tree-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox haspopup tree": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP; \"property objectAttributes contains haspopup:tree\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute;  expected true got false",
            "GC02": "assert_true: \"property actions contains AXPress\" failed ;  expected true got false",
            "WK02": "assert_true: \"property actions contains AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox haspopup true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false",
            "GC02": "assert_true: \"property actions contains AXPress\" failed ;  expected true got false",
            "WK02": "assert_true: \"property actions contains AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox haspopup unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP; \"property objectAttributes contains haspopup:listbox\" failed https://bugzil.la/1355449: 1355449 - Elements having aria-haspopup with a value other than false should expose that value as an object attribute;  expected true got false",
            "GC02": "assert_true: \"property actions contains AXPress\" failed ;  expected true got false",
            "WK02": "assert_true: \"property actions contains AXPress\" failed https://github.com/w3c/aria/issues/570: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/combobox_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/combobox_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states doesNotContain STATE_VERTICAL\" failed https://bugzil.la/1357042: 1357042 - Implement or update support for exposure of aria-orientation via ATK StateSet;  expected true got false",
            "GC02": "assert_true: \"property AXOrientation is AXUnknownOrientation\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/combobox_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/combobox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP; \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "combobox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_HAS_POPUP\" failed https://bugzil.la/1355447: 1355447 - Elements having aria-haspopup with a value other than false should expose ATK_STATE_HAS_POPUP;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/dialog_modal_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "dialog modal false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is web dialog\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "dialog modal false 1": {
          "stNum": 1,
          "byUA": {
            "GC02": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/dialog_modal_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "dialog modal true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is web dialog\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "dialog modal true 1": {
          "stNum": 1,
          "byUA": {
            "GC02": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property accessible is false\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/dialog_modal_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "dialog modal unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is web dialog\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "dialog modal unspecified 1": {
          "stNum": 1,
          "byUA": {
            "GC02": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/div_element_without_role_roledescription_valid-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "div element without role roledescription valid": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is group\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXRoleDescription is group\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/errormessage_object_in_invalid_state-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "errormessage object in invalid state": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"relation RELATION_ERROR_MESSAGE exists false\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781587: Bug 781587 – Add error-message and error-for relation types;  expected true got false",
            "GC02": "assert_true: \"property TBD is TBD\" failed ;  expected true got false",
            "WK01": "assert_true: \"relation RELATION_ERROR_MESSAGE exists false\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781587: Bug 781587 – Add error-message and error-for relation types;  expected true got false",
            "WK02": "assert_true: \"property TBD is TBD\" failed https://webkit.org/b/165190;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        },
        "errormessage object in invalid state 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"relation RELATION_ERROR_FOR exists false\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781587: Bug 781587 – Add error-message and error-for relation types;  expected true got false",
            "WK01": "assert_true: \"relation RELATION_ERROR_FOR exists false\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781587: Bug 781587 – Add error-message and error-for relation types;  expected true got false"
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/errormessage_object_in_valid_state-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "errormessage object in valid state": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"relation RELATION_ERROR_MESSAGE is error\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781587: Bug 781587 – Add error-message and error-for relation types;  expected true got false",
            "GC02": "assert_true: \"property TBD is TBD\" failed ;  expected true got false",
            "WK01": "assert_true: \"relation RELATION_ERROR_MESSAGE is error\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781587: Bug 781587 – Add error-message and error-for relation types;  expected true got false",
            "WK02": "assert_true: \"property TBD is TBD\" failed https://webkit.org/b/165190;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        },
        "errormessage object in valid state 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"relation RELATION_ERROR_FOR is test\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781587: Bug 781587 – Add error-message and error-for relation types;  expected true got false",
            "WK01": "assert_true: \"relation RELATION_ERROR_FOR is test\" failed https://bugzilla.gnome.org/show_bug.cgi?id=781587: Bug 781587 – Add error-message and error-for relation types;  expected true got false"
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/feed-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "feed": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRole is AXGroup\" failed ERROR: Object not found; \"property AXSubrole is AXApplicationGroup\" failed ERROR: Object not found; \"property AXRoleDescription is feed\" failed ERROR: Object not found;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/figure-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "figure": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_PANEL\" failed https://bugzil.la/1356049: 1356049 - ARIA figure role should be mapped as ATK_ROLE_PANEL;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/grid_aria-readonly_false_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid aria-readonly false automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "grid aria-readonly false automatically propagated 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "grid aria-readonly false automatically propagated 2": {
          "stNum": 2,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_aria-readonly_true_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid aria-readonly true automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false",
            "WK01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://webkit.org/b/171189: 171189 – AX: Propagate aria-readonly to grid descendants;  expected true got false",
            "WK02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is false\" failed https://webkit.org/b/171189: 171189 – AX: Propagate aria-readonly to grid descendants;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "grid aria-readonly true automatically propagated 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false",
            "WK01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://webkit.org/b/171189: 171189 – AX: Propagate aria-readonly to grid descendants;  expected true got false",
            "WK02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is false\" failed https://webkit.org/b/171189: 171189 – AX: Propagate aria-readonly to grid descendants;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "grid aria-readonly true automatically propagated 2": {
          "stNum": 2,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false",
            "WK01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://webkit.org/b/171189: 171189 – AX: Propagate aria-readonly to grid descendants;  expected true got false",
            "WK02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is false\" failed https://webkit.org/b/171189: 171189 – AX: Propagate aria-readonly to grid descendants;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/grid_busy_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid busy false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRole is AXTable\" failed ; \"property AXRoleDescription is table\" failed ; \"property AXElementBusy is false\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_busy_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid busy true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRole is AXTable\" failed ; \"property AXRoleDescription is table\" failed ; \"property AXElementBusy is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_busy_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid busy value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"event type is AXElementBusyChanged\" failed ; \"property AXSubrole is <nil>\" failed ; \"property AXRoleDescription is table\" failed ; \"property AXElementBusy is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_colcount_8-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid colcount 8": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_columns() is 8\" failed https://bugzil.la/1356997: ;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTable\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_columns() is 8\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid columnheader readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid columnheader readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid columnheader readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_required_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid columnheader required false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_required_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid columnheader required true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_required_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid columnheader required unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/grid_rowcount_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid rowcount 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_rows() is 3\" failed https://bugzil.la/1356997: ;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTable\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_rows() is 3\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid rowheader readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid rowheader readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid rowheader readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_required_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid rowheader required false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_required_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid rowheader required true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_required_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "grid rowheader required unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/gridcell_aria-colspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "gridcell aria-colspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/gridcell_aria-rowspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "gridcell aria-rowspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/gridcell_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "gridcell colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/gridcell_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "gridcell rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/group_hidden_undefined_element_not_rendered-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "group hidden undefined element not rendered": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/group_hidden_undefined_element_rendered-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "group hidden undefined element rendered": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXSubrole is AXApplicationGroup\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/heading_level_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "heading level unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains level:2\" failed https://bugzil.la/1357100: 1357100 - Implement support for implicit value for aria-level on heading role;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/keyshortcuts_multiple_shortcuts-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "keyshortcuts multiple shortcuts": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed ERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported ERROR: 'NoneType' object is not callable;  expected true got false",
            "WK01": "assert_true: \"property objectAttributes contains keyshortcuts:Shift+Space Alt+Space\" failed https://webkit.org/b/171175: 171175 – [ATK] Expose value of aria-keyshortcuts as object attribute;  expected true got false",
            "WK02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed ERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported ERROR: 'NoneType' object is not callable https://webkit.org/b/159215: 159215 – AX: ARIA 1.1 @aria-keyshortcuts;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        }
      }
    },
    "/wai-aria/keyshortcuts_one_shortcut-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "keyshortcuts one shortcut": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed ERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported ERROR: 'NoneType' object is not callable;  expected true got false",
            "WK01": "assert_true: \"property objectAttributes contains keyshortcuts:Shift+Space\" failed https://webkit.org/b/171175: 171175 – [ATK] Expose value of aria-keyshortcuts as object attribute;  expected true got false",
            "WK02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed ERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported ERROR: 'NoneType' object is not callable https://webkit.org/b/159215: 159215 – AX: ARIA 1.1 @aria-keyshortcuts;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        }
      }
    },
    "/wai-aria/listbox_busy_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listbox busy false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXElementBusy is false\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/listbox_busy_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listbox busy true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXElementBusy is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/listbox_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listbox orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "WK02": "assert_true: \"property AXOrientation is AXHorizontalOrientation\" failed https://webkit.org/b/171166: 171166 – AX: Update implementation of aria-orientation;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/listbox_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listbox orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/listbox_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listbox orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/listbox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listbox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/listbox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listbox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/listbox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listbox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/listitem_setsize_-1-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "listitem setsize -1": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains setsize:-1\" failed https://bugzil.la/1358473: 1358473 - Do not calculate setsize when aria-setsize has a value of -1;  expected true got false",
            "GC02": "assert_true: \"property AXARIASetSize is -1\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/menu_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menu orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menu_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menu orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menu_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menu orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menubar_busy_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menubar busy false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXElementBusy is false\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/menubar_busy_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menubar busy true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXElementBusy is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/menubar_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menubar orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menubar_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menubar orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menubar_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menubar orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menuitem_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitem posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menuitemcheckbox_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitemcheckbox posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXARIAPosInSet is 4\" failed ; \"property AXARIASetSize is 8\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/menuitemcheckbox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitemcheckbox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/menuitemcheckbox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitemcheckbox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/menuitemcheckbox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitemcheckbox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/menuitemradio_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitemradio posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXARIAPosInSet is 4\" failed ; \"property AXARIASetSize is 8\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/menuitemradio_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitemradio readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/menuitemradio_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitemradio readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states doesNotContain STATE_CHECKABLE\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY; \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/menuitemradio_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "menuitemradio readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/none-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "none": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/option_selected_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "option selected false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "WK01": "assert_true: \"property states contains STATE_SELECTABLE\" failed https://webkit.org/b/171186: 171186 – [ATK] Options in an ARIA listbox should have STATE_SELECTABLE and emit selection-related events;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/option_selected_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "option selected true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXSelected is true\" failed ;  expected true got false",
            "WK01": "assert_true: \"property states contains STATE_SELECTABLE\" failed https://webkit.org/b/171186: 171186 – [ATK] Options in an ARIA listbox should have STATE_SELECTABLE and emit selection-related events;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/option_selected_undefined-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "option selected undefined": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "WK01": "assert_true: \"property states contains STATE_SELECTABLE\" failed https://webkit.org/b/171186: 171186 – [ATK] Options in an ARIA listbox should have STATE_SELECTABLE and emit selection-related events;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/option_selected_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "option selected value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed ;  expected true got false",
            "WK01": "assert_true: \"event type is object:state-changed:selected\" failed https://webkit.org/b/171186;  expected true got false",
            "WK02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "option selected value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: ERROR: No results reported from ATTA;  expected true got false",
            "WK01": "assert_true: \"event type is object:selection-changed\" failed https://webkit.org/b/171186;  expected true got false",
            "WK02": "assert_true: ERROR: No results reported from ATTA;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "option selected value changes 2": {
          "stNum": 2,
          "byUA": {
            "FF01": "PASS",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "WK01": "assert_true: \"event type is object:state-changed:selected\" failed https://webkit.org/b/171186;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/radiogroup_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "radiogroup orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/radiogroup_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "radiogroup orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXOrientation is AXUnknownOrientation\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/radiogroup_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "radiogroup orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/radiogroup_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "radiogroup readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/radiogroup_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "radiogroup readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/radiogroup_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "radiogroup readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/region_with_name-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "region with name": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_LANDMARK\" failed https://bugzil.la/1210630: 1210630 - Section elements with accessible names should be mapped the same as ARIA role region;  expected true got false",
            "GC02": "assert_true: \"property AXSubrole is AXLandmarkRegion\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/region_without_name-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "region without name": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_SECTION\" failed https://bugzil.la/1358462: 1358462 - Elements with role=\"region\" and no accessible name should be mapped according to host language;  expected true got false",
            "GC02": "assert_true: \"property AXSubrole is <nil>\" failed ; \"property AXRoleDescription is group\" failed ;  expected true got false",
            "WK01": "assert_true: \"property role is ROLE_SECTION\" failed ERROR: Object not found; \"property interfaces contains Text\" failed ERROR: Object not found https://webkit.org/b/171180: 171180 – AX: ARIA \"region\" role which lacks an accessible name should not be treated as a landmark; \"property interfaces contains Hypertext\" failed ERROR: Object not found;  expected true got false",
            "WK02": "assert_true: \"property AXRole is AXGroup\" failed ERROR: Object not found; \"property AXRoleDescription is group\" failed ERROR: Object not found;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/row_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "row colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "WK01": "assert_true: \"property objectAttributes contains colindex:4\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "row colindex 4 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/row_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "row rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "WK01": "assert_true: \"property objectAttributes contains rowindex:4\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        },
        "row rowindex 4 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/rowheader_aria-colspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "rowheader aria-colspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/rowheader_aria-rowspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "rowheader aria-rowspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed https://bugzil.la/1357013: 1357013 - atk_table_cell_get_row_column_span() should report the values of aria-rowspan and aria-colspan;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/rowheader_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "rowheader colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains column=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/rowheader_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "rowheader rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://bugzil.la/1357188: 1357188 - atk_table_cell_get_position() should report the values of aria-rowindex and aria-colindex;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowIndex is 4\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_cell_get_position() contains row=3\" failed https://webkit.org/b/171176: 171176 – [ATK] Implement support for aria-rowindex and aria-colindex;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/rowheader_selected_false_not_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "rowheader selected false not automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXSelected is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/rowheader_selected_true_not_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "rowheader selected true not automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/scrollbar_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "scrollbar all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_value_get_minimum_value() is 0\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1357071: ; \"result atk_value_get_current_value() is 50\" failed https://bugzil.la/1357071: 1357071 - Implement support for implicit values for aria-value* attributes for scrollbar and slider roles; \"result atk_value_get_maximum_value() is 100\" failed https://bugzil.la/1357071: 1357071 - Implement support for implicit values for aria-value* attributes for scrollbar and slider roles;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed ; \"property AXMaxValue is 100\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/scrollbar_only_valuenow_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "scrollbar only valuenow unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_value_get_current_value() is 20\" failed https://bugzil.la/1357071: 1357071 - Implement support for implicit values for aria-value* attributes for scrollbar and slider roles;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 20\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/scrollbar_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "scrollbar orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_activedescendant-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox activedescendant": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "WK01": "assert_true: \"property states doesNotContain STATE_FOCUSED\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is false\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 2
          }
        },
        "searchbox activedescendant 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_FOCUSED\" failed ; \"property states contains STATE_FOCUSABLE\" failed https://bugzil.la/1359045: 1359045 - A container\\'s active descendant should expose ATK_STATE_FOCUSABLE in addition to ATK_STATE_FOCUSED; \"event type is object:state-changed:focused\" failed ;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed ;  expected true got false",
            "WK01": "assert_true: \"property states contains STATE_FOCUSED\" failed ERROR: Object not found; \"property states contains STATE_FOCUSABLE\" failed ERROR: Object not found; \"event type is object:state-changed:focused\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is true\" failed ; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed ; \"event type is AXFocusedUIElementChanged\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_activedescendant_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox activedescendant value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result array isNot true\" failed ;  expected true got false",
            "WK01": "assert_true: \"property states doesNotContain STATE_FOCUSED\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is false\" failed ; \"result array isNot true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "searchbox activedescendant value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_FOCUSED\" failed ; \"property states contains STATE_FOCUSABLE\" failed https://bugzil.la/1359045: 1359045 - A container\\'s active descendant should expose ATK_STATE_FOCUSABLE in addition to ATK_STATE_FOCUSED; \"event type is object:state-changed:focused\" failed ;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed ;  expected true got false",
            "WK01": "assert_true: \"property states contains STATE_FOCUSED\" failed ERROR: Object not found; \"property states contains STATE_FOCUSABLE\" failed ERROR: Object not found; \"event type is object:state-changed:focused\" failed ;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is true\" failed ; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed ; \"event type is AXFocusedUIElementChanged\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_both-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox autocomplete both": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_inline-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox autocomplete inline": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_list-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox autocomplete list": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_none-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox autocomplete none": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox autocomplete unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_multiline_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox multiline false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_multiline_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox multiline true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_multiline_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox multiline unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_placeholder-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox placeholder": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains placeholder-text:DD/MM/YYYY\" failed https://bugzil.la/1303429: ;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/searchbox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property interfaces doesNotContain EditableText\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY; \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/searchbox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_required_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox required false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_required_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox required true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/searchbox_required_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "searchbox required unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/separator_focusable_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "separator focusable all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property interfaces contains Value\" failed https://bugzil.la/1355954: ; \"result atk_value_get_minimum_value() is 0\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"result atk_value_get_current_value() is 50\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"result atk_value_get_maximum_value() is 100\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed ; \"property AXMaxValue is 100\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/separator_focusable_only_valuenow_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "separator focusable only valuenow unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property interfaces contains Value\" failed https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"result atk_value_get_minimum_value() is 0\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"result atk_value_get_current_value() is 50\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"result atk_value_get_maximum_value() is 100\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed ; \"property AXMaxValue is 100\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/separator_focusable_valuetext-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "separator focusable valuetext": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains valuetext:Bonaire\" failed https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"property interfaces contains Value\" failed https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"result atk_value_get_minimum_value() is 0\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"result atk_value_get_current_value() is 50\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK; \"result atk_value_get_maximum_value() is 100\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1355954: 1355954 - Focusable separators should implement the accessible value interface in IA2 and ATK;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed ; \"property AXMaxValue is 100\" failed ; \"property AXValueDescription is Bonaire\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/separator_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "separator orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/separator_unfocusable_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "separator unfocusable all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/separator_unfocusable_valuetext-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "separator unfocusable valuetext": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/slider_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "slider all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_value_get_minimum_value() is 0\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1357071: 1357071 - Implement support for implicit values for aria-value* attributes for scrollbar and slider roles; \"result atk_value_get_current_value() is 50\" failed https://bugzil.la/1357071: 1357071 - Implement support for implicit values for aria-value* attributes for scrollbar and slider roles; \"result atk_value_get_maximum_value() is 100\" failed https://bugzil.la/1357071: 1357071 - Implement support for implicit values for aria-value* attributes for scrollbar and slider roles;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed ; \"property AXMaxValue is 100\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/slider_only_valuenow_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "slider only valuenow unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_value_get_current_value() is 20\" failed https://bugzil.la/1357071: 1357071 - Implement support for implicit values for aria-value* attributes for scrollbar and slider roles;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 20\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/slider_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "slider orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/slider_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "slider readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/slider_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "slider readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/slider_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "slider readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/spinbutton_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "spinbutton all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_value_get_minimum_value() isLTE -9007199254740992\" failed ERROR: atspi_error: Get failed (1) https://bugzil.la/1357097: 1357097 - Implement support for implicit values for aria-value* attributes for spinbutton role; \"result atk_value_get_maximum_value() isGTE 9007199254740992\" failed https://bugzil.la/1357097: 1357097 - Implement support for implicit values for aria-value* attributes for spinbutton role;  expected true got false",
            "GC02": "assert_true: \"property AXMinValue isLTE -9007199254740992\" failed ; \"property AXMaxValue isGTE 9007199254740992\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/spinbutton_only_aria-valuenow_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "spinbutton only aria-valuenow unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/spinbutton_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "spinbutton readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/spinbutton_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "spinbutton readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/spinbutton_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "spinbutton readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/switch_checked_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "switch checked false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/switch_checked_mixed-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "switch checked mixed": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states doesNotContain STATE_CHECKED\" failed https://bugzil.la/1358447: 1358447 - Elements with aria-checked=\"mixed\" and role=\"switch\" should not expose ATK_STATE_CHECKED;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/switch_checked_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "switch checked true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/switch_checked_undefined-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "switch checked undefined": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/switch_checked_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "switch checked value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"event type is object:state-changed:checked\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/switch_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "switch readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/switch_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "switch readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states contains STATE_READ_ONLY\" failed https://bugzil.la/1356018: 1356018 - Elements with aria-readonly=\"true\" should expose ATK_STATE_READ_ONLY;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/switch_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "switch readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/tab_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "tab posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXARIAPosInSet is 3\" failed ; \"property AXARIASetSize is 7\" failed ; \"property AXSelected is true\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/table_colcount_-1-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "table colcount -1": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_columns() is -1\" failed https://bugzil.la/1356997: 1356997 - atk_table_get_n_{columns,rows} should report the values of aria-{col,row}count;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnCount is -1\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_columns() is -1\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/table_colcount_8-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "table colcount 8": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_columns() is 8\" failed https://bugzil.la/1356997: 1356997 - atk_table_get_n_{columns,rows} should report the values of aria-{col,row}count;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnCount is 8\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_columns() is 8\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/table_rowcount_-1-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "table rowcount -1": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_rows() is -1\" failed https://bugzil.la/1356997: 1356997 - atk_table_get_n_{columns,rows} should report the values of aria-{col,row}count;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowCount is -1\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_rows() is -1\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/table_rowcount_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "table rowcount 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_rows() is 3\" failed https://bugzil.la/1356997: 1356997 - atk_table_get_n_{columns,rows} should report the values of aria-{col,row}count;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowCount is 3\" failed ;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_rows() is 3\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/tablist_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "tablist orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/tablist_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "tablist orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/tablist_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "tablist orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/term_role-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "term role": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_DESCRIPTION_TERM\" failed https://bugzil.la/1358417: 1358417 - ARIA term role should be exposed with ATK_ROLE_DESCRIPTION_TERM;  expected true got false",
            "WK01": "assert_true: \"property role is ROLE_DESCRIPTION_TERM\" failed https://bugzilla.gnome.org/show_bug.cgi?id=782041: Bug 782041 – AT-SPI2 is missing roles that are present in ATK;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/textbox_placeholder-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "textbox placeholder": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property objectAttributes contains placeholder-text:DD/MM/YYYY\" failed https://bugzil.la/1303429: 1303429 - expose placeholder object attribute for HTML placeholder;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed ; \"property AXRoleDescription is text field\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/toolbar_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "toolbar orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/toolbar_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "toolbar orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/toolbar_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "toolbar orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/tree_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "tree orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/tree_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "tree orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/tree_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "tree orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/treegrid_colcount_8-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treegrid colcount 8": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_columns() is 8\" failed https://bugzil.la/1356997: 1356997 - atk_table_get_n_{columns,rows} should report the values of aria-{col,row}count;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_columns() is 8\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/treegrid_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treegrid orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/treegrid_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treegrid orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property states doesNotContain STATE_VERTICAL\" failed https://bugzil.la/1357042: 1357042 - Implement or update support for exposure of aria-orientation via ATK StateSet;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/treegrid_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treegrid orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/treegrid_rowcount_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treegrid rowcount 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"result atk_table_get_n_rows() is 3\" failed https://bugzil.la/1356997: 1356997 - atk_table_get_n_{columns,rows} should report the values of aria-{col,row}count;  expected true got false",
            "WK01": "assert_true: \"result atk_table_get_n_rows() is 3\" failed https://webkit.org/b/171172: 171172 – [ATK] implement support for aria-rowcount and aria-colcount;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/treeitem_selected_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treeitem selected false": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_TREE_ITEM\" failed https://bugzil.la/1355423: 1355423 - ARIA treeitem role should be mapped as ATK_ROLE_TREE_ITEM; not ATK_ROLE_LIST_ITEM;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is outline row\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/treeitem_selected_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treeitem selected true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_TREE_ITEM\" failed https://bugzil.la/1355423: 1355423 - ARIA treeitem role should be mapped as ATK_ROLE_TREE_ITEM; not ATK_ROLE_LIST_ITEM;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is outline row\" failed ; \"property AXSelected is true\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/treeitem_selected_undefined-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treeitem selected undefined": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert_true: \"property role is ROLE_TREE_ITEM\" failed https://bugzil.la/1355423: 1355423 - ARIA treeitem role should be mapped as ATK_ROLE_TREE_ITEM; not ATK_ROLE_LIST_ITEM;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is outline row\" failed ;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/treeitem_selected_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 4
      },
      "subtests": {
        "treeitem selected value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed ;  expected true got false",
            "WK01": "assert_true: \"event type is object:state-changed:selected\" failed https://webkit.org/b/171185;  expected true got false",
            "WK02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed ;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "treeitem selected value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: ERROR: No results reported from ATTA;  expected true got false",
            "WK01": "assert_true: \"event type is object:selection-changed\" failed https://webkit.org/b/171185;  expected true got false",
            "WK02": "assert_true: ERROR: No results reported from ATTA;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "treeitem selected value changes 2": {
          "stNum": 2,
          "byUA": {
            "FF01": "PASS",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "WK01": "assert_true: \"event type is object:state-changed:selected\" failed https://webkit.org/b/171185;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 1
          }
        }
      }
    }
  }
}