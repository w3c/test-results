{
  "ua": [
    "FF01",
    "FF02",
    "GC02",
    "WK01",
    "WK02"
  ],
  "results": {
    "/wai-aria/alertdialog_modal_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "alertdialog modal false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXWindow  \n; \"property AXRoleDescription is web alert dialog\" failed   \n**Actual value:** alert dialog  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is web alert dialog\" failed   \n**Actual value:** alertdialog  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        },
        "alertdialog modal false 1": {
          "stNum": 1,
          "byUA": {
            "FF02": "PASS",
            "GC02": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/alertdialog_modal_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "alertdialog modal true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXWindow  \n; \"property AXRoleDescription is web alert dialog\" failed   \n**Actual value:** alert dialog  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is web alert dialog\" failed   \n**Actual value:** alertdialog  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        },
        "alertdialog modal true 1": {
          "stNum": 1,
          "byUA": {
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false",
            "GC02": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/application_activedescendant-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "application activedescendant": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXWebApplication\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is web application\" failed   \n**Actual value:** group  \n;  expected true got false",
            "GC02": "assert_true: \"property AXSubrole is AXWebApplication\" failed   \n**Actual value:** AXLandmarkApplication  \n; \"property AXRoleDescription is web application\" failed   \n**Actual value:** application  \n;  expected true got false",
            "WK01": "assert\\_true: \"property states doesNotContain STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_FOCUSABLE', 'STATE\\_FOCUSED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        },
        "application activedescendant 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n; \"property states contains STATE\\_FOCUSABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1359045>: [NEW] A container's active descendant should expose ATK\\_STATE\\_FOCUSABLE in addition to ATK\\_STATE\\_FOCUSED  \n;  expected true got false",
            "FF02": "assert_true: \"property AXFocused is true\" failed   \n**Actual value:** false  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "WK01": "assert\\_true: \"property states contains STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n; \"property states contains STATE\\_FOCUSABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is true\" failed   \n**Actual value:** false  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 5
          }
        }
      }
    },
    "/wai-aria/application_activedescendant_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "application activedescendant value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXWebApplication\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is web application\" failed   \n**Actual value:** group  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"property AXSubrole is AXWebApplication\" failed   \n**Actual value:** AXLandmarkApplication  \n; \"property AXRoleDescription is web application\" failed   \n**Actual value:** application  \n; \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false",
            "WK01": "assert\\_true: \"property states doesNotContain STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_FOCUSABLE', 'STATE\\_FOCUSED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is false\" failed   \n**Actual value:** true  \n; \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        },
        "application activedescendant value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n; \"property states contains STATE\\_FOCUSABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1359045>: [NEW] A container's active descendant should expose ATK\\_STATE\\_FOCUSABLE in addition to ATK\\_STATE\\_FOCUSED  \n; \"event type is object:state-changed:focused\" failed   \n;  expected true got false",
            "FF02": "assert_true: \"property AXFocused is true\" failed   \n**Actual value:** false  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false",
            "WK01": "assert\\_true: \"property states contains STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n; \"property states contains STATE\\_FOCUSABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n; \"event type is object:state-changed:focused\" failed   \n;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is true\" failed   \n**Actual value:** false  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 5
          }
        }
      }
    },
    "/wai-aria/aria-current_not_declared-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current not declared": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIACurrent is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current with value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIACurrent contains false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent contains false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_date-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current with value date": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXARIACurrent is date\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is date\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_location-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current with value location": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIACurrent is location\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is location\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_page-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current with value page": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIACurrent is page\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is page\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_step-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current with value step": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIACurrent is step\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is step\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_time-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current with value time": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXARIACurrent is time\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is time\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current with value true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIACurrent is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-current_with_value_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-current with value unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIACurrent is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIACurrent is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/aria-details_pointing_to_details_element-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-details pointing to details element": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property TBD is TBD\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"property TBD is TBD\" failed   \n;  expected true got false",
            "WK02": "assert_true: \"property TBD is TBD\" failed <https://webkit.org/b/165842>  \n;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 3
          }
        },
        "aria-details pointing to details element 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "WK01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/aria-details_pointing_to_div_element-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "aria-details pointing to div element": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property TBD is TBD\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"property TBD is TBD\" failed   \n;  expected true got false",
            "WK02": "assert_true: \"property TBD is TBD\" failed <https://webkit.org/b/165842>  \n;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 3
          }
        },
        "aria-details pointing to div element 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "WK01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/article_in_feed_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "article in feed posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** None  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** 0  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** 0  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/article_in_feed_setsize_-1-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "article in feed setsize -1": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains setsize:-1\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:article', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1358473>: [NEW] Do not calculate setsize when aria-setsize has a value of -1  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIASetSize is -1\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIASetSize is -1\" failed   \n**Actual value:** 0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/article_not_in_feed_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "article not in feed posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** None  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** 0  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** 0  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_dialog-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup dialog": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:dialog\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:button', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_emptystring-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup emptystring": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:false\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:button', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress,  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress,  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress,  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress,  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_foo-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup foo": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:false\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:button', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n; \"property states doesNotContain STATE\\_HAS_POPUP\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT', 'STATE\\_HAS\\_POPUP']  \n;  expected true got false",
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress,  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress,  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_grid-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup grid": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:grid\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:button', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_listbox-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup listbox": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:listbox\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:button', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_menu-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup menu": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:menu\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:button', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_tree-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup tree": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:tree\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:button', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/button_haspopup_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXMenuButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** menu button  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** []  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/button_haspopup_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button haspopup unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress,  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress,  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/button_roledescription_empty-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button roledescription empty": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is button\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/button_roledescription_valid-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button roledescription valid": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRoleDescription is SassyButton\" failed   \n**Actual value:** button  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/button_roledescription_whitespace_only-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "button roledescription whitespace only": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXRoleDescription is button\" failed   \n**Actual value:**       \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/cell-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_columns() is 8\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnCount is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnCount is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_columns() is 8\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        },
        "cell 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-colspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_td_html_colspan_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-colspan 2 on td html colspan 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes doesNotContain colspan:2\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:td', 'table-cell-index:0', 'colspan:2', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'display:table-cell', 'margin-top:0px']  \n<https://bugzil.la/1357153>: [NEW] Ignore aria-{row,col}span values when host language {row,col}span attribute is present  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_td_html_colspan_3_with_headers_and_border-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-colspan 2 on td html colspan 3 with headers and border": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes doesNotContain colspan:2\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:td', 'table-cell-index:3', 'colspan:2', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'display:table-cell', 'margin-top:0px']  \n<https://bugzil.la/1357153>: [NEW] Ignore aria-{row,col}span values when host language {row,col}span attribute is present  \n; \"result atk_table_cell_get_row_column_span() contains column_span=3\" failed   \n**Actual value:** (row=0, column=1, row\\_span=3, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_td_html_colspan_3_with_three_actual_columns-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-colspan 2 on td html colspan 3 with three actual columns": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains column_span=3\" failed   \n**Actual value:** (row=0, column=1, row\\_span=3, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXColumnIndexRange.length is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-colspan_2_on_td_with_html_colspan_not_specified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-colspan 2 on td with html colspan not specified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-rowspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-rowspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-rowspan_2_on_td_html_rowspan_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-rowspan 2 on td html rowspan 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes doesNotContain rowspan:2\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'rowspan:2', 'margin-right:0px', 'tag:td', 'table-cell-index:0', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:cell', 'display:table-cell', 'margin-top:0px']  \n<https://bugzil.la/1357153>: [NEW] Ignore aria-{row,col}span values when host language {row,col}span attribute is present  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/cell_aria-rowspan_2_on_td_html_rowspan_3_with_three_actual_rows-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-rowspan 2 on td html rowspan 3 with three actual rows": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains row_span=3\" failed   \n**Actual value:** (row=1, column=0, row\\_span=1, column\\_span=3)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_aria-rowspan_2_on_td_with_html_rowspan_not_specified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell aria-rowspan 2 on td with html rowspan not specified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/cell_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/cell_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "cell rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/checkbox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "checkbox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/checkbox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "checkbox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states doesNotContain STATE\\_CHECKABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT', 'STATE\\_CHECKABLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n; \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT', 'STATE\\_CHECKABLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/checkbox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "checkbox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-colspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader aria-colspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-colspan_2_on_th_html_colspan_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader aria-colspan 2 on th html colspan 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes doesNotContain colspan:2\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:th', 'table-cell-index:0', 'colspan:2', 'margin-left:0px', 'text-indent:0px', 'text-align:center', 'xml-roles:columnheader', 'display:table-cell', 'margin-top:0px']  \n<https://bugzil.la/1357153>: [NEW] Ignore aria-{row,col}span values when host language {row,col}span attribute is present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-colspan_2_on_th_html_colspan_3_with_three_actual_columns-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader aria-colspan 2 on th html colspan 3 with three actual columns": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains column_span=3\" failed   \n**Actual value:** (row=0, column=1, row\\_span=3, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-colspan_2_on_th_with_html_colspan_not_specified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader aria-colspan 2 on th with html colspan not specified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-rowspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader aria-rowspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-rowspan_2_on_th_html_rowspan_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader aria-rowspan 2 on th html rowspan 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes doesNotContain rowspan:2\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'rowspan:2', 'margin-right:0px', 'tag:th', 'table-cell-index:0', 'margin-left:0px', 'text-indent:0px', 'text-align:center', 'xml-roles:columnheader', 'display:table-cell', 'margin-top:0px']  \n<https://bugzil.la/1357153>: [NEW] Ignore aria-{row,col}span values when host language {row,col}span attribute is present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-rowspan_2_on_th_html_rowspan_3_with_three_actual_rows-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader aria-rowspan 2 on th html rowspan 3 with three actual rows": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains row_span=3\" failed   \n**Actual value:** (row=1, column=0, row\\_span=1, column\\_span=3)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/columnheader_aria-rowspan_2_on_th_with_html_rowspan_not_specified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader aria-rowspan 2 on th with html rowspan not specified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/columnheader_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/columnheader_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/columnheader_selected_false_not_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader selected false not automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXRoleDescription is cell\" failed   \n**Actual value:** group  \n; \"property AXSelected is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXSelected is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/columnheader_selected_true_not_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "columnheader selected true not automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXRoleDescription is cell\" failed   \n**Actual value:** group  \n; \"property AXSelected is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/combobox_controls_an_invalid_id-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox controls an invalid ID": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "combobox controls an invalid ID 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "WK01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_dialog-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox haspopup dialog": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:dialog\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:combobox', 'explicit-name:true', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"property AXExpanded is true\" failed   \n**Actual value:** None  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox haspopup false": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states doesNotContain STATE\\_HAS_POPUP\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_EXPANDABLE', 'STATE\\_EXPANDED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT', 'STATE\\_HAS\\_POPUP']  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"property AXExpanded is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false",
            "WK02": "assert_true: \"property actions doesNotContain AXShowMenu\" failed   \n**Actual value:** (  \n    AXShowMenu,  \n    AXScrollToVisible  \n)  \n<https://github.com/w3c/aria/issues/570>: [OPEN] Core-AAM: AXPress and AXShowMenu on aria-haspopup is potentially misleading/confusing  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_grid-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox haspopup grid": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:grid\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:combobox', 'explicit-name:true', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"property AXExpanded is true\" failed   \n**Actual value:** None  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_listbox-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox haspopup listbox": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:listbox\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:combobox', 'explicit-name:true', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"property AXExpanded is true\" failed   \n**Actual value:** None  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_menu-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox haspopup menu": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:menu\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:combobox', 'explicit-name:true', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"property AXExpanded is true\" failed   \n**Actual value:** None  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_tree-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox haspopup tree": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:tree\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'haspopup:true', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:combobox', 'explicit-name:true', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"property AXExpanded is true\" failed   \n**Actual value:** None  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox haspopup true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"property AXExpanded is true\" failed   \n**Actual value:** None  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/combobox_haspopup_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox haspopup unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains haspopup:listbox\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:combobox', 'explicit-name:true', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1355449>: [NEW] Elements having aria-haspopup with a value other than false should expose that value as an object attribute  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"property AXExpanded is true\" failed   \n**Actual value:** None  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** (  \n    AXPress  \n)  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/combobox_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n;  expected true got false",
            "GC02": "assert_true: \"property AXOrientation is AXUnknownOrientation\" failed   \n**Actual value:** AXVerticalOrientation  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/combobox_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/combobox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/combobox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_EXPANDABLE', 'STATE\\_EXPANDED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT', 'STATE\\_HAS\\_POPUP']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/combobox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "combobox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXComboBox\" failed   \n**Actual value:** AXPopUpButton  \n; \"property AXRoleDescription is combo box\" failed   \n**Actual value:** pop up button  \n; \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/dialog_modal_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "dialog modal false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXWindow  \n; \"property AXRoleDescription is web dialog\" failed   \n**Actual value:** window  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is web dialog\" failed   \n**Actual value:** dialog  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        },
        "dialog modal false 1": {
          "stNum": 1,
          "byUA": {
            "FF02": "PASS",
            "GC02": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/dialog_modal_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "dialog modal true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXWindow  \n; \"property AXRoleDescription is web dialog\" failed   \n**Actual value:** window  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is web dialog\" failed   \n**Actual value:** dialog  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        },
        "dialog modal true 1": {
          "stNum": 1,
          "byUA": {
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false",
            "GC02": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/dialog_modal_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "dialog modal unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXWindow  \n; \"property AXRoleDescription is web dialog\" failed   \n**Actual value:** window  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is web dialog\" failed   \n**Actual value:** dialog  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        },
        "dialog modal unspecified 1": {
          "stNum": 1,
          "byUA": {
            "FF02": "PASS",
            "GC02": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/div_element_without_role_roledescription_valid-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "div element without role roledescription valid": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is <nil>\" failed   \n**Actual value:** AXApplicationGroup  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is group\" failed   \n**Actual value:** foo  \n;  expected true got false",
            "WK02": "assert_true: \"property AXRoleDescription is group\" failed   \n**Actual value:** foo  \n;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 3
          }
        }
      }
    },
    "/wai-aria/errormessage_object_in_invalid_state-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "errormessage object in invalid state": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property TBD is TBD\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"property TBD is TBD\" failed   \n;  expected true got false",
            "WK02": "assert_true: \"property TBD is TBD\" failed <https://webkit.org/b/165190>  \n;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 3
          }
        },
        "errormessage object in invalid state 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "WK01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/errormessage_object_in_valid_state-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "errormessage object in valid state": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property relations doesNotContain RELATION\\_ERROR_MESSAGE\" failed   \n**Actual value:** ['RELATION\\_LABELLED\\_BY', 'RELATION\\_ERROR\\_MESSAGE']  \n;  expected true got false",
            "FF02": "assert_true: \"property TBD is TBD\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"property TBD is TBD\" failed   \n;  expected true got false",
            "WK01": "assert\\_true: \"property relations doesNotContain RELATION\\_ERROR_MESSAGE\" failed   \n**Actual value:** ['RELATION\\_LABELLED\\_BY', 'RELATION\\_ERROR\\_MESSAGE']  \n;  expected true got false",
            "WK02": "assert_true: \"property TBD is TBD\" failed <https://webkit.org/b/165190>  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 5
          }
        },
        "errormessage object in valid state 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property relations doesNotContain RELATION\\_ERROR_FOR\" failed   \n**Actual value:** ['RELATION\\_ERROR\\_FOR']  \n;  expected true got false",
            "WK01": "assert\\_true: \"property relations doesNotContain RELATION\\_ERROR_FOR\" failed   \n**Actual value:** ['RELATION\\_ERROR\\_FOR']  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/feed-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "feed": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXApplicationGroup\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is feed\" failed   \n**Actual value:** group  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** None  \nERROR: Object not found  \n; \"property AXSubrole is AXApplicationGroup\" failed   \n**Actual value:** None  \nERROR: Object not found  \n; \"property AXRoleDescription is feed\" failed   \n**Actual value:** None  \nERROR: Object not found  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/figure-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "figure": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/grid_aria-readonly_false_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid aria-readonly false automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        },
        "grid aria-readonly false automatically propagated 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        },
        "grid aria-readonly false automatically propagated 2": {
          "stNum": 2,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/grid_aria-readonly_true_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid aria-readonly true automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SELECTABLE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        },
        "grid aria-readonly true automatically propagated 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        },
        "grid aria-readonly true automatically propagated 2": {
          "stNum": 2,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/grid_busy_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid busy false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXElementBusy is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTable\" failed   \n**Actual value:** AXGrid  \n; \"property AXRoleDescription is table\" failed   \n**Actual value:** grid  \n; \"property AXElementBusy is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/grid_busy_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid busy true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXElementBusy is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTable\" failed   \n**Actual value:** AXGrid  \n; \"property AXRoleDescription is table\" failed   \n**Actual value:** grid  \n; \"property AXElementBusy is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/grid_busy_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid busy value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRoleDescription is table\" failed   \n**Actual value:** None  \n; \"property AXElementBusy is true\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"event type is AXElementBusyChanged\" failed   \n**Actual value:** AXGrid  \n; \"property AXSubrole is <nil>\" failed   \n**Actual value:** grid  \n; \"property AXRoleDescription is table\" failed   \n**Actual value:** None  \n; \"property AXElementBusy is true\" failed   \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/grid_colcount_8-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid colcount 8": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_columns() is 8\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnCount is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTable\" failed   \n**Actual value:** AXGrid  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_columns() is 8\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid columnheader readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid columnheader readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid columnheader readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_required_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid columnheader required false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRequired is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_required_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid columnheader required true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRequired is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_columnheader_required_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid columnheader required unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRequired is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_rowcount_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid rowcount 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_rows() is 3\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIARowCount is 3\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTable\" failed   \n**Actual value:** AXGrid  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_rows() is 3\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid rowheader readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid rowheader readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid rowheader readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_required_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid rowheader required false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRequired is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_required_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid rowheader required true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRequired is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/grid_rowheader_required_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "grid rowheader required unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRequired is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/gridcell_aria-colspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "gridcell aria-colspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/gridcell_aria-rowspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "gridcell aria-rowspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/gridcell_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "gridcell colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/gridcell_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "gridcell rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/group_hidden_undefined_element_not_rendered-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "group hidden undefined element not rendered": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/group_hidden_undefined_element_rendered-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "group hidden undefined element rendered": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXApplicationGroup\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXSubrole is AXApplicationGroup\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/heading_level_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "heading level unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains level:2\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'xml-roles:heading', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1357100>: [NEW] Implement support for implicit value for aria-level on heading role  \n;  expected true got false",
            "FF02": "assert_true: \"property AXValue is 2\" failed   \n**Actual value:** 0  \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 2\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/keyshortcuts_multiple_shortcuts-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "keyshortcuts multiple shortcuts": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed   \n**Actual value:** None  \nERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported  \nERROR: 'NoneType' object is not callable  \n;  expected true got false",
            "GC02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed   \n**Actual value:** None  \nERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported  \nERROR: 'NoneType' object is not callable  \n;  expected true got false",
            "WK01": "assert\\_true: \"property objectAttributes contains keyshortcuts:Shift+Space Alt+Space\" failed   \n**Actual value:** ['computed-role:button', 'xml-roles:button', 'html-id:test', 'tag:div', 'toolkit:WebKitGtk']  \n<https://webkit.org/b/171175>: [NEW] [ATK] Expose value of aria-keyshortcuts as object attribute  \n;  expected true got false",
            "WK02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed   \n**Actual value:** None  \nERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported  \nERROR: 'NoneType' object is not callable  \n<https://webkit.org/b/159215>: [NEW] AX: ARIA 1.1 @aria-keyshortcuts  \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/keyshortcuts_one_shortcut-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "keyshortcuts one shortcut": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed   \n**Actual value:** None  \nERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported  \nERROR: 'NoneType' object is not callable  \n;  expected true got false",
            "GC02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed   \n**Actual value:** None  \nERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported  \nERROR: 'NoneType' object is not callable  \n;  expected true got false",
            "WK01": "assert\\_true: \"property objectAttributes contains keyshortcuts:Shift+Space\" failed   \n**Actual value:** ['computed-role:button', 'xml-roles:button', 'html-id:test', 'tag:div', 'toolkit:WebKitGtk']  \n<https://webkit.org/b/171175>: [NEW] [ATK] Expose value of aria-keyshortcuts as object attribute  \n;  expected true got false",
            "WK02": "assert_true: \"result The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is true\" failed   \n**Actual value:** None  \nERROR: The element with role=\"button\" and id=\"test\", does not expose aria-keyshortcuts is not supported  \nERROR: 'NoneType' object is not callable  \n<https://webkit.org/b/159215>: [NEW] AX: ARIA 1.1 @aria-keyshortcuts  \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        }
      }
    },
    "/wai-aria/listbox_busy_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listbox busy false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXElementBusy is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXElementBusy is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/listbox_busy_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listbox busy true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXElementBusy is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXElementBusy is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/listbox_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listbox orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/listbox_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listbox orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/listbox_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listbox orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/listbox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listbox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/listbox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listbox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_FOCUSABLE', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VERTICAL', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/listbox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listbox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/listitem_setsize_-1-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "listitem setsize -1": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains setsize:-1\" failed   \n**Actual value:** ['margin-bottom:0px', 'posinset:1', 'margin-right:0px', 'tag:div', 'id:test', 'formatting:block', 'margin-left:0px', 'setsize:1', 'text-align:start', 'xml-roles:listitem', 'display:block', 'text-indent:0px', 'margin-top:0px']  \n<https://bugzil.la/1358473>: [NEW] Do not calculate setsize when aria-setsize has a value of -1  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIASetSize is -1\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/menu_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menu orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/menu_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menu orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/menu_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menu orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/menubar_busy_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menubar busy false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXElementBusy is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXElementBusy is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/menubar_busy_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menubar busy true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXElementBusy is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXElementBusy is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/menubar_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menubar orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/menubar_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menubar orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/menubar_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menubar orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/menuitem_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitem posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** None  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/menuitemcheckbox_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitemcheckbox posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXValue is 1\" failed   \n**Actual value:**   \n; \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** None  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** 0  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** 0  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/menuitemcheckbox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitemcheckbox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/menuitemcheckbox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitemcheckbox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT', 'STATE\\_CHECKABLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menuitemcheckbox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitemcheckbox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/menuitemradio_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitemradio posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXValue is 0\" failed   \n**Actual value:**   \n; \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** None  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAPosInSet is 4\" failed   \n**Actual value:** 0  \n; \"property AXARIASetSize is 8\" failed   \n**Actual value:** 0  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/menuitemradio_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitemradio readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/menuitemradio_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitemradio readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states doesNotContain STATE\\_CHECKABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT', 'STATE\\_CHECKABLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n; \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT', 'STATE\\_CHECKABLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/menuitemradio_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "menuitemradio readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/none-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "none": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/option_selected_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "option selected false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSelected is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"property states contains STATE\\_SELECTABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE']  \n<https://webkit.org/b/171186>: [NEW] [ATK] Options in an ARIA listbox should have STATE\\_SELECTABLE and emit selection-related events  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/option_selected_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "option selected true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSelected is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXSelected is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "WK01": "assert\\_true: \"property states contains STATE\\_SELECTABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_FOCUSED', 'STATE\\_HORIZONTAL', 'STATE\\_SELECTED', 'STATE\\_SENSITIVE']  \n<https://webkit.org/b/171186>: [NEW] [ATK] Options in an ARIA listbox should have STATE\\_SELECTABLE and emit selection-related events  \n;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 3
          }
        }
      }
    },
    "/wai-aria/option_selected_undefined-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "option selected undefined": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSelected is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"property states contains STATE\\_SELECTABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE']  \n<https://webkit.org/b/171186>: [NEW] [ATK] Options in an ARIA listbox should have STATE\\_SELECTABLE and emit selection-related events  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/option_selected_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "option selected value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false",
            "WK01": "assert\\_true: \"event type is object:state-changed:selected\" failed <https://webkit.org/b/171186>  \n;  expected true got false",
            "WK02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        },
        "option selected value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: ERROR: No results reported from ATTA;  expected true got false",
            "GC02": "assert_true: ERROR: No results reported from ATTA;  expected true got false",
            "WK01": "assert\\_true: \"event type is object:selection-changed\" failed <https://webkit.org/b/171186>  \n;  expected true got false",
            "WK02": "assert_true: ERROR: No results reported from ATTA;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        },
        "option selected value changes 2": {
          "stNum": 2,
          "byUA": {
            "FF01": "PASS",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "WK01": "assert\\_true: \"event type is object:state-changed:selected\" failed <https://webkit.org/b/171186>  \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/radiogroup_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "radiogroup orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/radiogroup_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "radiogroup orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXOrientation is AXUnknownOrientation\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/radiogroup_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "radiogroup orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/radiogroup_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "radiogroup readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/radiogroup_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "radiogroup readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/radiogroup_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "radiogroup readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/region_with_name-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "region with name": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXSubrole is AXLandmarkRegion\" failed   \n**Actual value:** AXDocumentRegion  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/region_without_name-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "region without name": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "GC02": "assert_true: \"property AXSubrole is <nil>\" failed   \n**Actual value:** AXDocumentRegion  \n; \"property AXRoleDescription is group\" failed   \n**Actual value:** region  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/row_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "row colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "WK01": "assert\\_true: \"property objectAttributes contains colindex:4\" failed   \n**Actual value:** ['computed-role:row', 'xml-roles:row', 'html-id:test', 'tag:div', 'toolkit:WebKitGtk']  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        },
        "row colindex 4 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/row_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "row rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "WK01": "assert\\_true: \"property objectAttributes contains rowindex:4\" failed   \n**Actual value:** ['computed-role:row', 'xml-roles:row', 'html-id:test', 'tag:div', 'toolkit:WebKitGtk']  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        },
        "row rowindex 4 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/rowheader_aria-colspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "rowheader aria-colspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains column_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXColumnIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/rowheader_aria-rowspan_2_on_div-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "rowheader aria-rowspan 2 on div": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_row_column_span() contains row_span=2\" failed   \n**Actual value:** (row=0, column=0, row\\_span=1, column\\_span=1)  \n<https://bugzil.la/1357013>: [NEW] atk\\_table\\_cell\\_get\\_row\\_column\\_span() should report the values of aria-rowspan and aria-colspan  \n;  expected true got false",
            "FF02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/rowheader_colindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "rowheader colindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains column=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/rowheader_rowindex_4-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "rowheader rowindex 4": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://bugzil.la/1357188>: [NEW] atk\\_table\\_cell\\_get\\_position() should report the values of aria-rowindex and aria-colindex  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowIndex is 4\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_cell_get_position() contains row=3\" failed   \n**Actual value:** (1, row=0, column=0)  \n<https://webkit.org/b/171176>: [NEW] [ATK] atk\\_table\\_cell\\_get\\_position() should return values of aria-rowindex and aria-colindex, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/rowheader_selected_false_not_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "rowheader selected false not automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXRoleDescription is cell\" failed   \n**Actual value:** group  \n; \"property AXSelected is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXSelected is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/rowheader_selected_true_not_automatically_propagated-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "rowheader selected true not automatically propagated": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXRoleDescription is cell\" failed   \n**Actual value:** group  \n; \"property AXSelected is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/scrollbar_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "scrollbar all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_value_get_minimum_value() is 0\" failed   \n**Actual value:** None  \nERROR: atspi\\_error: Get failed (1)  \n<https://bugzil.la/1357071>: [NEW] Implement support for implicit values for aria-value* attributes for scrollbar and slider roles  \n; \"result atk_value_get_current_value() is 50\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1357071>: [NEW] Implement support for implicit values for aria-value* attributes for scrollbar and slider roles  \n; \"result atk_value_get_maximum_value() is 100\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1357071>: [NEW] Implement support for implicit values for aria-value* attributes for scrollbar and slider roles  \n;  expected true got false",
            "FF02": "assert_true: \"property AXMinValue is 0\" failed   \n**Actual value:** None  \n; \"property AXValue is 50\" failed   \n**Actual value:**   \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed   \n**Actual value:** 0.0  \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** 0.0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/scrollbar_only_valuenow_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "scrollbar only valuenow unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_value_get_current_value() is 20\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1357071>: [NEW] Implement support for implicit values for aria-value* attributes for scrollbar and slider roles  \n;  expected true got false",
            "FF02": "assert_true: \"property AXMinValue is 0\" failed   \n**Actual value:** None  \n; \"property AXValue is 20\" failed   \n**Actual value:**   \n; \"property AXMaxValue is 40\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 20\" failed   \n**Actual value:** 0.0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/scrollbar_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "scrollbar orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/searchbox-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed   \n**Actual value:** AXTextArea  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/searchbox_activedescendant-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox activedescendant": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false",
            "WK01": "assert\\_true: \"property states doesNotContain STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_EDITABLE', 'STATE\\_ENABLED', 'STATE\\_FOCUSABLE', 'STATE\\_FOCUSED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_SINGLE\\_LINE', 'STATE\\_VISIBLE']  \n;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 3
          }
        },
        "searchbox activedescendant 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n; \"property states contains STATE\\_FOCUSABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1359045>: [NEW] A container's active descendant should expose ATK\\_STATE\\_FOCUSABLE in addition to ATK\\_STATE\\_FOCUSED  \n; \"event type is object:state-changed:focused\" failed   \n;  expected true got false",
            "FF02": "assert_true: \"property AXFocused is true\" failed   \n**Actual value:** false  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false",
            "WK01": "assert\\_true: \"property states contains STATE\\_FOCUSED\" failed   \n**Actual value:** None  \nERROR: Object not found  \n; \"property states contains STATE\\_FOCUSABLE\" failed   \n**Actual value:** None  \nERROR: Object not found  \n; \"event type is object:state-changed:focused\" failed   \n;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is true\" failed   \n**Actual value:** false  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 5
          }
        }
      }
    },
    "/wai-aria/searchbox_activedescendant_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox activedescendant value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n; \"event type is AXSelectedChildrenChanged\" failed   \n**Actual value:** false  \n; \"result array isNot true\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"result array isNot true\" failed   \n;  expected true got false",
            "WK01": "assert\\_true: \"property states doesNotContain STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_EDITABLE', 'STATE\\_ENABLED', 'STATE\\_FOCUSABLE', 'STATE\\_FOCUSED', 'STATE\\_HORIZONTAL', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_SINGLE\\_LINE', 'STATE\\_VISIBLE']  \n;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is false\" failed   \n**Actual value:** true  \n; \"result array isNot true\" failed   \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        },
        "searchbox activedescendant value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_FOCUSED\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n; \"property states contains STATE\\_FOCUSABLE\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_SELECTABLE\\_TEXT']  \n<https://bugzil.la/1359045>: [NEW] A container's active descendant should expose ATK\\_STATE\\_FOCUSABLE in addition to ATK\\_STATE\\_FOCUSED  \n; \"event type is object:state-changed:focused\" failed   \n;  expected true got false",
            "FF02": "assert_true: \"property AXFocused is true\" failed   \n**Actual value:** false  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false",
            "WK01": "assert\\_true: \"property states contains STATE\\_FOCUSED\" failed   \n**Actual value:** None  \nERROR: Object not found  \n; \"property states contains STATE\\_FOCUSABLE\" failed   \n**Actual value:** None  \nERROR: Object not found  \n; \"event type is object:state-changed:focused\" failed   \n;  expected true got false",
            "WK02": "assert_true: \"property AXFocused is true\" failed   \n**Actual value:** false  \n; \"result AXUIElementIsAttributeSettable(AXFocused) is true\" failed   \n**Actual value:** false  \n; \"event type is AXFocusedUIElementChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 5
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_both-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox autocomplete both": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_inline-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox autocomplete inline": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_list-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox autocomplete list": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_none-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox autocomplete none": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_autocomplete_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox autocomplete unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_multiline_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox multiline false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed   \n**Actual value:** AXTextArea  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/searchbox_multiline_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox multiline true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed   \n**Actual value:** AXTextArea  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/searchbox_multiline_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox multiline unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed   \n**Actual value:** AXTextArea  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/searchbox_placeholder-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox placeholder": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains placeholder-text:DD/MM/YYYY\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'text-input-type:search', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'placeholder:DD/MM/YYYY', 'xml-roles:searchbox', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1303429>: [NEW] expose placeholder object attribute for HTML placeholder  \n;  expected true got false",
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n; \"property AXPlaceholderValue is DD/MM/YYYY\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed   \n**Actual value:** AXTextArea  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/searchbox_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n; \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property interfaces doesNotContain EditableText\" failed   \n**Actual value:** ['Accessible', 'Action', 'Collection', 'Component', 'EditableText', 'Hypertext', 'Hyperlink', 'Text']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n; \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_SINGLE\\_LINE', 'STATE\\_VISIBLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false",
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n; \"result AXUIElementIsAttributeSettable(AXValue) is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 3
          }
        }
      }
    },
    "/wai-aria/searchbox_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n; \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_required_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox required false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_required_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox required true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/searchbox_required_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "searchbox required unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/separator_focusable_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "separator focusable all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_value_get_minimum_value() is 0\" failed   \n**Actual value:** None  \nERROR: atspi\\_error: Get failed (1)  \n<https://bugzil.la/1355954>: [RESOLVED FIXED] Focusable separators should implement the accessible value interface  \n; \"result atk_value_get_current_value() is 50\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1355954>: [RESOLVED FIXED] Focusable separators should implement the accessible value interface  \n; \"result atk_value_get_maximum_value() is 100\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1355954>: [RESOLVED FIXED] Focusable separators should implement the accessible value interface  \n;  expected true got false",
            "FF02": "assert_true: \"property AXMinValue is 0\" failed   \n**Actual value:** None  \n; \"property AXValue is 50\" failed   \n**Actual value:**   \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed   \n**Actual value:** 0.0  \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** 0.0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/separator_focusable_only_valuenow_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "separator focusable only valuenow unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_value_get_current_value() is 50\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1355954>: [RESOLVED FIXED] Focusable separators should implement the accessible value interface  \n;  expected true got false",
            "FF02": "assert_true: \"property AXMinValue is 0\" failed   \n**Actual value:** None  \n; \"property AXValue is 50\" failed   \n**Actual value:**   \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed   \n**Actual value:** 0.0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/separator_focusable_valuetext-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "separator focusable valuetext": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_value_get_minimum_value() is 0\" failed   \n**Actual value:** None  \nERROR: atspi\\_error: Get failed (1)  \n<https://bugzil.la/1355954>: [RESOLVED FIXED] Focusable separators should implement the accessible value interface  \n; \"result atk_value_get_current_value() is 50\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1355954>: [RESOLVED FIXED] Focusable separators should implement the accessible value interface  \n; \"result atk_value_get_maximum_value() is 100\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1355954>: [RESOLVED FIXED] Focusable separators should implement the accessible value interface  \n;  expected true got false",
            "FF02": "assert_true: \"property AXMinValue is 0\" failed   \n**Actual value:** None  \n; \"property AXValue is 50\" failed   \n**Actual value:** Bonaire  \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** None  \n; \"property AXValueDescription is Bonaire\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed   \n**Actual value:** 0.0  \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** 0.0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/separator_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "separator orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/separator_unfocusable_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "separator unfocusable all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/separator_unfocusable_valuetext-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "separator unfocusable valuetext": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/slider_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "slider all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_value_get_minimum_value() is 0\" failed   \n**Actual value:** None  \nERROR: atspi\\_error: Get failed (1)  \n<https://bugzil.la/1357071>: [NEW] Implement support for implicit values for aria-value* attributes for scrollbar and slider roles  \n; \"result atk_value_get_current_value() is 50\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1357071>: [NEW] Implement support for implicit values for aria-value* attributes for scrollbar and slider roles  \n; \"result atk_value_get_maximum_value() is 100\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1357071>: [NEW] Implement support for implicit values for aria-value* attributes for scrollbar and slider roles  \n;  expected true got false",
            "FF02": "assert_true: \"property AXMinValue is 0\" failed   \n**Actual value:** None  \n; \"property AXValue is 50\" failed   \n**Actual value:**   \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 50\" failed   \n**Actual value:** 0.0  \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** 0.0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/slider_only_valuenow_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "slider only valuenow unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_value_get_current_value() is 20\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1357071>: [NEW] Implement support for implicit values for aria-value* attributes for scrollbar and slider roles  \n;  expected true got false",
            "FF02": "assert_true: \"property AXMinValue is 0\" failed   \n**Actual value:** None  \n; \"property AXValue is 20\" failed   \n**Actual value:**   \n; \"property AXMaxValue is 40\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 20\" failed   \n**Actual value:** 0.0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/slider_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "slider orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/slider_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "slider readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/slider_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "slider readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_HORIZONTAL', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/slider_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "slider readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/spinbutton_all_values_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "spinbutton all values unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_value_get_minimum_value() isLTE -9007199254740992\" failed   \n**Actual value:** None  \nERROR: atspi\\_error: Get failed (1)  \n<https://bugzil.la/1357097>: [NEW] Implement support for implicit values for aria-value* attributes for spinbutton role  \n; \"result atk_value_get_maximum_value() isGTE 9007199254740992\" failed   \n**Actual value:** 0.0  \n<https://bugzil.la/1357097>: [NEW] Implement support for implicit values for aria-value* attributes for spinbutton role  \n;  expected true got false",
            "FF02": "assert_true: \"property AXMinValue isLTE -9007199254740992\" failed   \n**Actual value:** None  \n; \"property AXValue is 0\" failed   \n**Actual value:**   \n; \"property AXMaxValue isGTE 9007199254740992\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXMinValue isLTE -9007199254740992\" failed   \n**Actual value:** 0.0  \n; \"property AXMaxValue isGTE 9007199254740992\" failed   \n**Actual value:** 0.0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/spinbutton_only_aria-valuenow_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "spinbutton only aria-valuenow unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXMinValue is 0\" failed   \n**Actual value:** None  \n; \"property AXValue is 0\" failed   \n**Actual value:**   \n; \"property AXMaxValue is 100\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/spinbutton_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "spinbutton readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/spinbutton_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "spinbutton readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/spinbutton_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "spinbutton readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/switch_checked_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "switch checked false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXValue is 0\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/switch_checked_mixed-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "switch checked mixed": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXValue is 0\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/switch_checked_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "switch checked true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXValue is 1\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/switch_checked_undefined-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "switch checked undefined": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXValue is 0\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 1
          }
        }
      }
    },
    "/wai-aria/switch_checked_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "switch checked value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXRoleDescription is switch\" failed   \n**Actual value:**   \n; \"property AXValue is 1\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"property AXValue is 1\" failed   \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/switch_readonly_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "switch readonly false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/switch_readonly_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "switch readonly true": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property states contains STATE\\_READ_ONLY\" failed   \n**Actual value:** ['STATE\\_ENABLED', 'STATE\\_OPAQUE', 'STATE\\_SENSITIVE', 'STATE\\_SHOWING', 'STATE\\_VISIBLE', 'STATE\\_CHECKABLE']  \n<https://bugzil.la/1356018>: [NEW] Elements with aria-readonly=\"true\" should expose ATK\\_STATE\\_READ\\_ONLY  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 4
          }
        }
      }
    },
    "/wai-aria/switch_readonly_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "switch readonly unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false",
            "GC02": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/tab_posinset_and_setsize-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "tab posinset and setsize": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXARIAPosInSet is 3\" failed   \n**Actual value:** None  \n; \"property AXARIASetSize is 7\" failed   \n**Actual value:** None  \n; \"property AXSelected is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAPosInSet is 3\" failed   \n**Actual value:** 0  \n; \"property AXARIASetSize is 7\" failed   \n**Actual value:** 0  \n; \"property AXSelected is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/table_colcount_-1-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "table colcount -1": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_columns() is -1\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnCount is -1\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnCount is -1\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_columns() is -1\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/table_colcount_8-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "table colcount 8": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_columns() is 8\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnCount is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIAColumnCount is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_columns() is 8\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/table_rowcount_-1-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "table rowcount -1": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_rows() is -1\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIARowCount contains -1\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowCount contains -1\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_rows() is -1\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/table_rowcount_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "table rowcount 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_rows() is 3\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIARowCount is 3\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXARIARowCount is 3\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_rows() is 3\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 4,
            "PASS": 1
          }
        }
      }
    },
    "/wai-aria/tablist_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "tablist orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/tablist_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "tablist orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/tablist_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "tablist orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/term_role-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "term role": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/textbox_placeholder-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "textbox placeholder": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"property objectAttributes contains placeholder-text:DD/MM/YYYY\" failed   \n**Actual value:** ['margin-bottom:0px', 'id:test', 'margin-right:0px', 'tag:div', 'formatting:block', 'margin-left:0px', 'text-indent:0px', 'text-align:start', 'placeholder:DD/MM/YYYY', 'xml-roles:textbox', 'display:block', 'margin-top:0px']  \n<https://bugzil.la/1303429>: [NEW] expose placeholder object attribute for HTML placeholder  \n;  expected true got false",
            "FF02": "assert_true: \"property AXPlaceholderValue is DD/MM/YYYY\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRole is AXTextField\" failed   \n**Actual value:** AXTextArea  \n; \"property AXRoleDescription is text field\" failed   \n**Actual value:** text entry area  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/toolbar_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "toolbar orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/toolbar_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "toolbar orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/toolbar_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "toolbar orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/tree_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "tree orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/tree_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "tree orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/tree_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "tree orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/treegrid_colcount_8-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treegrid colcount 8": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_columns() is 8\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIAColumnCount is 8\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_columns() is 8\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/treegrid_orientation_horizontal-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treegrid orientation horizontal": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/treegrid_orientation_unspecified-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treegrid orientation unspecified": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/treegrid_orientation_vertical-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treegrid orientation vertical": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "PASS",
            "GC02": "PASS",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        }
      }
    },
    "/wai-aria/treegrid_rowcount_3-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treegrid rowcount 3": {
          "stNum": 0,
          "byUA": {
            "FF01": "FAIL",
            "FF02": "FAIL",
            "GC02": "PASS",
            "WK01": "FAIL",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF01": "assert\\_true: \"result atk_table_get_n_rows() is 3\" failed   \n**Actual value:** 1  \n<https://bugzil.la/1356997>: [NEW] atk\\_table\\_get\\_n\\_{columns,rows} should report the values of aria-{col,row}count  \n;  expected true got false",
            "FF02": "assert_true: \"property AXARIARowCount is 3\" failed   \n**Actual value:** None  \n;  expected true got false",
            "WK01": "assert\\_true: \"result atk_table_get_n_rows() is 3\" failed   \n**Actual value:** 1  \n<https://webkit.org/b/171172>: [NEW] [ATK] atk\\_table\\_get\\_n\\_rows() and atk\\_table\\_get\\_n\\_columns() should return values of aria-rowcount and aria-colcount, if present  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 2
          }
        }
      }
    },
    "/wai-aria/treeitem_selected_false-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treeitem selected false": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSelected is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is outline row\" failed   \n**Actual value:** row  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/treeitem_selected_true-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treeitem selected true": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSelected is true\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is outline row\" failed   \n**Actual value:** row  \n; \"property AXSelected is true\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/treeitem_selected_undefined-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treeitem selected undefined": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "PASS",
            "WK02": "PASS"
          },
          "UAmessage": {
            "FF02": "assert_true: \"property AXSelected is false\" failed   \n**Actual value:** None  \n;  expected true got false",
            "GC02": "assert_true: \"property AXRoleDescription is outline row\" failed   \n**Actual value:** row  \n;  expected true got false"
          },
          "totals": {
            "PASS": 3,
            "FAIL": 2
          }
        }
      }
    },
    "/wai-aria/treeitem_selected_value_changes-manual.html": {
      "byUA": {
        "FF01": "OK",
        "FF02": "OK",
        "GC02": "OK",
        "WK01": "OK",
        "WK02": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 5
      },
      "subtests": {
        "treeitem selected value changes": {
          "stNum": 0,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false",
            "GC02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false",
            "WK01": "assert\\_true: \"event type is object:state-changed:selected\" failed <https://webkit.org/b/171185>  \n;  expected true got false",
            "WK02": "assert_true: \"event type is AXSelectedChildrenChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        },
        "treeitem selected value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF01": "PASS",
            "FF02": "FAIL",
            "GC02": "FAIL",
            "WK01": "FAIL",
            "WK02": "FAIL"
          },
          "UAmessage": {
            "FF02": "assert_true: ERROR: No results reported from ATTA;  expected true got false",
            "GC02": "assert_true: ERROR: No results reported from ATTA;  expected true got false",
            "WK01": "assert\\_true: \"event type is object:selection-changed\" failed <https://webkit.org/b/171185>  \n;  expected true got false",
            "WK02": "assert_true: ERROR: No results reported from ATTA;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 4
          }
        },
        "treeitem selected value changes 2": {
          "stNum": 2,
          "byUA": {
            "FF01": "PASS",
            "WK01": "FAIL"
          },
          "UAmessage": {
            "WK01": "assert\\_true: \"event type is object:state-changed:selected\" failed <https://webkit.org/b/171185>  \n;  expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 1
          }
        }
      }
    }
  }
}