{
  "results": [
    {
      "test": "/pointerevents/extension/idlharness.html",
      "subtests": [
        {
          "name": "pointerevents extension interfaces",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: existence and properties of interface prototype object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: existence and properties of interface prototype object's @@unscopables property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: operation getCoalescedEvents()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for getCoalescedEvents() on PointerEvent",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/extension/pointerevent_constructor.html",
      "subtests": [
        {
          "name": "PointerEvent: Constructor test",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents().length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "event.target",
          "status": "PASS",
          "message": null
        },
        {
          "name": "event.currentTarget",
          "status": "PASS",
          "message": null
        },
        {
          "name": "event.eventPhase",
          "status": "PASS",
          "message": null
        },
        {
          "name": "event.clientX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].clientX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].clientX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].pointerId",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].pointerType",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].isPrimary",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].getCoalescedEvents().length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].target",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].currentTarget",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].eventPhase",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].cancelable",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].bubbles",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].offsetX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[0].offsetY",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].pointerId",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].pointerType",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].isPrimary",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].getCoalescedEvents().length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].target",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].currentTarget",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].eventPhase",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].cancelable",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].bubbles",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].offsetX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "getCoalescedEvents()[1].offsetY",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default getCoalescedEvents().length",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/extension/pointerevent_touch-action-verification.html",
      "subtests": [
        {
          "name": "default",
          "status": "PASS",
          "message": null
        },
        {
          "name": "stylesheet-none",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-auto",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-x",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-left",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-left\""
        },
        {
          "name": "explicit-pan-right",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-right\""
        },
        {
          "name": "explicit-pan-y",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-up",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-up\""
        },
        {
          "name": "explicit-pan-down",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-down\""
        },
        {
          "name": "explicit-pinch-zoom",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pinch-zoom\""
        },
        {
          "name": "explicit-pan-x-pan-y",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-y-pan-x",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-left-pan-up",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-left pan-up\""
        },
        {
          "name": "explicit-pan-left-pan-down",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-left pan-down\""
        },
        {
          "name": "explicit-pan-right-pan-up",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-right pan-up\""
        },
        {
          "name": "explicit-pan-right-pan-down",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-right pan-down\""
        },
        {
          "name": "explicit-pan-up-pan-left",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-left pan-up\""
        },
        {
          "name": "explicit-pan-up-pan-right",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-right pan-up\""
        },
        {
          "name": "explicit-pan-down-pan-left",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-left pan-down\""
        },
        {
          "name": "explicit-pan-down-pan-right",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-right pan-down\""
        },
        {
          "name": "explicit-pinch-zoom-pan-x-pan-up",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"pan-x pan-up pinch-zoom\""
        },
        {
          "name": "explicit-pinch-zoom-pan-x-pan-y",
          "status": "FAIL",
          "message": "assert_equals: expected \"auto\" but got \"manipulation\""
        },
        {
          "name": "explicit-manipulation",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-none",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-2",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-3",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-4",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-5",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-6",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-7",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-8",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-9",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-10",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-11",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-12",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-13",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-14",
          "status": "PASS",
          "message": null
        },
        {
          "name": "not-inherited",
          "status": "PASS",
          "message": null
        },
        {
          "name": "inherit",
          "status": "PASS",
          "message": null
        },
        {
          "name": "initial",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/idlharness.html",
      "subtests": [
        {
          "name": "pointerevents interfaces",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Partial interface Element: original interface defined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Partial interface GlobalEventHandlers: original interface defined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Partial interface Navigator: original interface defined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: existence and properties of interface prototype object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: existence and properties of interface prototype object's @@unscopables property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute pointerId",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for pointerId property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute width",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for width property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute height",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for height property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute pressure",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for pressure property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute tangentialPressure",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for tangentialPressure property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute tiltX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for tiltX property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute tiltY",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for tiltY property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute twist",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for twist property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute pointerType",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for pointerType property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: attribute isPrimary",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for isPrimary property on PointerEvent",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent must be primary interface of new PointerEvent(\"event\")",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of new PointerEvent(\"event\")",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"pointerId\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"width\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"height\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"pressure\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"tangentialPressure\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"tiltX\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"tiltY\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"twist\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"pointerType\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PointerEvent interface: new PointerEvent(\"event\") must inherit property \"isPrimary\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Navigator interface: attribute maxTouchPoints",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for maxTouchPoints property on Navigator",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Navigator interface: window.navigator must inherit property \"maxTouchPoints\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Element interface: operation setPointerCapture(long)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for setPointerCapture(long) on Element",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Element interface: operation releasePointerCapture(long)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for releasePointerCapture(long) on Element",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Element interface: operation hasPointerCapture(long)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for hasPointerCapture(long) on Element",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_constructor.html",
      "subtests": [
        {
          "name": "PointerEvent: Constructor test",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom bubbles",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom cancelable",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom pointerId",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom pointerType",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom button",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom buttons",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom width",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom height",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom clientX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom clientY",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom tiltX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom tiltY",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom twist",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom isPrimary",
          "status": "PASS",
          "message": null
        },
        {
          "name": "custom pressure: ",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default pointerId",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default pointerType",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default width",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default height",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default tiltX",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default tiltY",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default pressure",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default tangentialPressure",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default twist",
          "status": "PASS",
          "message": null
        },
        {
          "name": "default isPrimary",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_on_event_handlers.html",
      "subtests": [
        {
          "name": "The default value of onpointerdown is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onpointerdown content attribute must be compiled into the onpointerdown property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a pointerdown event must trigger element.onpointerdown",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of onpointerup is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onpointerup content attribute must be compiled into the onpointerup property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a pointerup event must trigger element.onpointerup",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of onpointercancel is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onpointercancel content attribute must be compiled into the onpointercancel property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a pointercancel event must trigger element.onpointercancel",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of onpointermove is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onpointermove content attribute must be compiled into the onpointermove property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a pointermove event must trigger element.onpointermove",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of onpointerover is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onpointerover content attribute must be compiled into the onpointerover property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a pointerover event must trigger element.onpointerover",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of onpointerout is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onpointerout content attribute must be compiled into the onpointerout property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a pointerout event must trigger element.onpointerout",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of onpointerenter is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onpointerenter content attribute must be compiled into the onpointerenter property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a pointerenter event must trigger element.onpointerenter",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of onpointerleave is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onpointerleave content attribute must be compiled into the onpointerleave property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a pointerleave event must trigger element.onpointerleave",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of ongotpointercapture is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The ongotpointercapture content attribute must be compiled into the ongotpointercapture property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a gotpointercapture event must trigger element.ongotpointercapture",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The default value of onlostpointercapture is always null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The onlostpointercapture content attribute must be compiled into the onlostpointercapture property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "dispatching a lostpointercapture event must trigger element.onlostpointercapture",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-illegal.html",
      "subtests": [
        {
          "name": "'pan-x none' is corrected properly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "'pan-y none' is corrected properly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "'auto none' is corrected properly",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-verification.html",
      "subtests": [
        {
          "name": "default",
          "status": "PASS",
          "message": null
        },
        {
          "name": "stylesheet-none",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-auto",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-x",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-y",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-x-pan-y",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-pan-y-pan-x",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-manipulation",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-none",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-2",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-3",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-4",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-5",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-6",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-7",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-8",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-9",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-10",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-11",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-12",
          "status": "PASS",
          "message": null
        },
        {
          "name": "explicit-invalid-13",
          "status": "PASS",
          "message": null
        },
        {
          "name": "not-inherited",
          "status": "PASS",
          "message": null
        },
        {
          "name": "inherit",
          "status": "PASS",
          "message": null
        },
        {
          "name": "initial",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/compat/pointerevent_touch-action_two-finger_interaction-manual.html",
      "subtests": [
        {
          "name": "touch two-finger pan on 'touch-action: pan-x pan-y'",
          "status": "FAIL",
          "message": "assert_equals: expected 0 but got 1"
        },
        {
          "name": "touch two-finger pan on 'touch-action: pinch-zoom'",
          "status": "FAIL",
          "message": "assert_equals: expected 0 but got 2"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/extension/pointerevent_coalesced_events_attributes-manual.html",
      "subtests": [],
      "status": "FAIL",
      "message": ""
    },
    {
      "test": "/pointerevents/extension/pointerevent_touch-action-pan-down-css_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "FAIL",
          "message": "assert_equals: scroll x offset should be 0 in the end of the test expected 0 but got 513"
        }
      ],
      "status": "ERROR",
      "message": "uncaught exception: Error: assert_greater_than_equal: expected a number greater than or equal to 200 but got 189"
    },
    {
      "test": "/pointerevents/extension/pointerevent_touch-action-pan-left-css_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "ERROR",
      "message": "uncaught exception: Error: assert_less_than_equal: expected a number less than or equal to 200 but got 201"
    },
    {
      "test": "/pointerevents/extension/pointerevent_touch-action-pan-right-css_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "FAIL",
          "message": "assert_greater_than: scroll x offset should be greater than 200 in the end of the test expected a number greater than 200 but got 0"
        }
      ],
      "status": "ERROR",
      "message": "uncaught exception: Error: assert_greater_than_equal: expected a number greater than or equal to 200 but got 0"
    },
    {
      "test": "/pointerevents/extension/pointerevent_touch-action-pan-up-css_touch-manual.html",
      "subtests": [],
      "status": "FAIL",
      "message": ""
    },
    {
      "test": "/pointerevents/html/pointerevent_drag_interaction-manual.html",
      "subtests": [
        {
          "name": "mouse pointer events vs drag and drop",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Pointercancel when drag operation starts",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Pointercancel while capturing when drag operation starts",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Pointerevent stream when drag is prevented.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_attributes_hoverable_pointers-manual.html",
      "subtests": [
        {
          "name": "mouse pointerevent attributes",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover's type should be pointerover",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerover event expected true got false"
        },
        {
          "name": " mouse pointerover.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerover.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerover.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerover event expected true got false"
        },
        {
          "name": " mouse pointerover.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerover.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerover.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerover.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter's type should be pointerenter",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerenter event expected true got false"
        },
        {
          "name": " mouse pointerenter.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerenter.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerenter.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerenter event expected true got false"
        },
        {
          "name": " mouse pointerenter.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerenter.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerenter.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove's type should be pointermove",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointermove event expected true got false"
        },
        {
          "name": " mouse pointermove.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointermove.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointermove.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointermove event expected true got false"
        },
        {
          "name": " mouse pointermove.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointermove.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointermove.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointermove.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown's type should be pointerdown",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerdown event expected true got false"
        },
        {
          "name": " mouse pointerdown.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerdown.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerdown.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerdown event expected true got false"
        },
        {
          "name": " mouse pointerdown.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerdown.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerdown.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerdown.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup's type should be pointerup",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup's button attribute is 0 when left mouse button is just released.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup's buttons attribute is 0 when left mouse button is just released.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerup event expected true got false"
        },
        {
          "name": " mouse pointerup.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerup.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerup.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerup event expected true got false"
        },
        {
          "name": " mouse pointerup.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerup.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerup.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerup.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout's type should be pointerout",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerout event expected true got false"
        },
        {
          "name": " mouse pointerout.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerout.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerout.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerout event expected true got false"
        },
        {
          "name": " mouse pointerout.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerout.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerout.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerout.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave's type should be pointerleave",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover's type should be pointerover",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerover event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerover.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerover.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerover.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerover event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerover.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerover.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerover.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerover.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter's type should be pointerenter",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerenter event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerenter.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerenter.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerenter.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerenter event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerenter.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerenter.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerenter.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerenter.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove's type should be pointermove",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointermove event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointermove.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointermove.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointermove.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointermove event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointermove.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointermove.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointermove.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointermove.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown's type should be pointerdown",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerdown event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerdown.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerdown.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerdown.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerdown event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerdown.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerdown.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerdown.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerdown.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup's type should be pointerup",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup's button attribute is 0 when left mouse button is just released.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup's buttons attribute is 0 when left mouse button is just released.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerup event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerup.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerup.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerup.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerup event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerup.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerup.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerup.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerup.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout's type should be pointerout",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerout event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerout.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerout.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerout.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerout event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerout.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerout.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerout.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerout.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave's type should be pointerleave",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  mouse pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  mouse pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  mouse pointerleave.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pen pointerevent attributes",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover's type should be pointerover",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover's ClientX and ClientY attributes are correct.",
          "status": "FAIL",
          "message": "assert_true: ClientX/Y should be in the boundaries of the box expected true got false"
        },
        {
          "name": " pen pointerover event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen pointerover event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerover event expected true got false"
        },
        {
          "name": " pen pointerover.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerover.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerover.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerover event expected true got false"
        },
        {
          "name": " pen pointerover.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerover.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerover.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerover.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter's type should be pointerenter",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter's ClientX and ClientY attributes are correct.",
          "status": "FAIL",
          "message": "assert_true: ClientX/Y should be in the boundaries of the box expected true got false"
        },
        {
          "name": " pen pointerenter event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen pointerenter event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerenter event expected true got false"
        },
        {
          "name": " pen pointerenter.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerenter.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerenter.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerenter event expected true got false"
        },
        {
          "name": " pen pointerenter.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerenter.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerenter.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerenter.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove's type should be pointermove",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove's ClientX and ClientY attributes are correct.",
          "status": "FAIL",
          "message": "assert_true: ClientX/Y should be in the boundaries of the box expected true got false"
        },
        {
          "name": " pen pointermove event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen pointermove event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointermove event expected true got false"
        },
        {
          "name": " pen pointermove.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointermove.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointermove.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointermove event expected true got false"
        },
        {
          "name": " pen pointermove.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointermove.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointermove.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointermove.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown's type should be pointerdown",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen pointerdown event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerdown event expected true got false"
        },
        {
          "name": " pen pointerdown.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerdown.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerdown.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerdown event expected true got false"
        },
        {
          "name": " pen pointerdown.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerdown.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerdown.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerdown.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup's type should be pointerup",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup's button attribute is 0 when left mouse button is just released.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup's buttons attribute is 0 when left mouse button is just released.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen pointerup event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerup event expected true got false"
        },
        {
          "name": " pen pointerup.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerup.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerup.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerup event expected true got false"
        },
        {
          "name": " pen pointerup.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerup.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerup.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerup.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout's type should be pointerout",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen pointerout event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerout event expected true got false"
        },
        {
          "name": " pen pointerout.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerout.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerout.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerout event expected true got false"
        },
        {
          "name": " pen pointerout.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerout.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerout.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerout.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave's type should be pointerleave",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " pen pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " pen pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen pointerleave.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover's type should be pointerover",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": "Inner frame  pen pointerover event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerover event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerover.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerover.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerover.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerover event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerover.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerover.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerover.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerover.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter's type should be pointerenter",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": "Inner frame  pen pointerenter event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerenter event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerenter.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerenter.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerenter.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerenter event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerenter.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerenter.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerenter.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerenter.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove's type should be pointermove",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": "Inner frame  pen pointermove event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointermove event expected true got false"
        },
        {
          "name": "Inner frame  pen pointermove.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointermove.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointermove.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointermove event expected true got false"
        },
        {
          "name": "Inner frame  pen pointermove.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointermove.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointermove.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointermove.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown's type should be pointerdown",
          "status": "FAIL",
          "message": "assert_equals: Event.type should be pointerdown expected \"pointerdown\" but got \"pointerout\""
        },
        {
          "name": "Inner frame  pen pointerdown's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": "Inner frame  pen pointerout event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerout event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerout.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerout.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerout.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerout event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerout.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerout.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerout.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup's type should be pointerup",
          "status": "FAIL",
          "message": "assert_equals: Event.type should be pointerup expected \"pointerup\" but got \"pointerleave\""
        },
        {
          "name": "Inner frame  pen pointerup's button is -1 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": "Inner frame  pen pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout's type should be pointerout",
          "status": "FAIL",
          "message": "assert_equals: Event.type should be pointerout expected \"pointerout\" but got \"pointerdown\""
        },
        {
          "name": "Inner frame  pen pointerout's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": "Inner frame  pen pointerdown event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerdown event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerdown.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerdown.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerdown.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerdown event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerdown.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerdown.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerdown.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerdown properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerout.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave's type should be pointerleave",
          "status": "FAIL",
          "message": "assert_equals: Event.type should be pointerleave expected \"pointerleave\" but got \"pointerup\""
        },
        {
          "name": "Inner frame  pen pointerleave's button attribute is 0 when left mouse button is just released.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave's buttons attribute is 0 when left mouse button is just released.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": "Inner frame  pen pointerup event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerup event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerup.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerup.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerup.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerup event expected true got false"
        },
        {
          "name": "Inner frame  pen pointerup.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  pen pointerup.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  pen pointerup.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerup properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  pen pointerleave.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_attributes_nohover_pointers-manual.html",
      "subtests": [
        {
          "name": "touch pointerevent attributes",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover's type should be pointerover",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerover event expected true got false"
        },
        {
          "name": " touch pointerover.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerover.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerover.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerover event expected true got false"
        },
        {
          "name": " touch pointerover.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerover.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerover.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerover.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter's type should be pointerenter",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerenter event expected true got false"
        },
        {
          "name": " touch pointerenter.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerenter.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerenter.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerenter event expected true got false"
        },
        {
          "name": " touch pointerenter.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerenter.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerenter.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerenter.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown's type should be pointerdown",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerdown event expected true got false"
        },
        {
          "name": " touch pointerdown.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerdown.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerdown.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerdown event expected true got false"
        },
        {
          "name": " touch pointerdown.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerdown.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerdown.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerdown.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup's type should be pointerup",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerup event expected true got false"
        },
        {
          "name": " touch pointerup.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerup.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerup.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerup event expected true got false"
        },
        {
          "name": " touch pointerup.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerup.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerup.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerup.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout's type should be pointerout",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerout event expected true got false"
        },
        {
          "name": " touch pointerout.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerout.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerout.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerout event expected true got false"
        },
        {
          "name": " touch pointerout.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerout.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerout.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerout.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave's type should be pointerleave",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " touch pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " touch pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointerleave.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover's type should be pointerover",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerover event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerover.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerover.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerover.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerover event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerover.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerover.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerover.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerover.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter's type should be pointerenter",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerenter event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerenter.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerenter.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerenter.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerenter event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerenter.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerenter.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerenter.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerenter.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown's type should be pointerdown",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown's buttons attribute is 1 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerdown event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerdown.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerdown.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerdown.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerdown event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerdown.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerdown.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerdown.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerdown.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup's type should be pointerup",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerup event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerup.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerup.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerup.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerup event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerup.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerup.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerup.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerup.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout's type should be pointerout",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerout event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerout.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerout.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerout.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerout event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerout.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerout.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerout.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerout.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave's type should be pointerleave",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave's button attribute is 0 when left mouse button is pressed.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave's buttons is 0 when mouse buttons are in released state.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave's ClientX and ClientY attributes are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": "Inner frame  touch pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": "Inner frame  touch pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": "Inner frame  touch pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.isPrimary attribute is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Inner frame  touch pointerleave.pointerId should be the same as previous pointer events for this active pointer.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_boundary_events_at_implicit_release_hoverable_pointers-manual.html",
      "subtests": [
        {
          "name": "mouse Event sequence at implicit release on click",
          "status": "FAIL",
          "message": "assert_equals: expected \"pointerout@target, pointerleave@target, pointerover@capture-target, pointerenter@capture-target, gotpointercapture@capture-target, pointerup@capture-target, lostpointercapture@capture-target, pointerout@capture-target, pointerleave@capture-target, pointerover@target, pointerenter@target\" but got \"gotpointercapture@capture-target, pointerout@target, pointerleave@target, pointerup@capture-target, lostpointercapture@capture-target\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_boundary_events_in_capturing-manual.html",
      "subtests": [
        {
          "name": "mouse pointerevent boundary events in capturing",
          "status": "PASS",
          "message": null
        },
        {
          "name": "mouse pointer events boundary events when receiving capture",
          "status": "PASS",
          "message": null
        },
        {
          "name": "mouse pointer events boundary events when releasing capture",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch pointerevent boundary events in capturing",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch pointer events boundary events when receiving capture",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch pointer events boundary events when releasing capture",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pen pointerevent boundary events in capturing",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pen pointer events boundary events when receiving capture",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the same as the requested device. expected \"pen\" but got \"mouse\""
        },
        {
          "name": "pen pointer events boundary events when releasing capture",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the same as the requested device. expected \"pen\" but got \"mouse\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_capture_mouse-manual.html",
      "subtests": [
        {
          "name": "gotpointercapture event received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "lostpointercapture event received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerover event for black rectangle received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerover event for purple rectangle received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "relatedTarget is null when the capture is set. relatedTarget is null",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointermove received for captured element while out of it",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_capture_suppressing_mouse-manual.html",
      "subtests": [
        {
          "name": "gotpointercapture event received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "lostpointercapture event received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerover event without capture received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerover event with capture received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerout event without capture received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerout event after lostpointercapture received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerenter event without capture received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerenter event with capture received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerleave event without capture received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerleave event after lostpointercapture received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "relatedTarget is not null for boundary events even when the capture is set.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pointerover should trigger the black rectangle even when pointer is not over black rectangle.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_change-touch-action-onpointerdown_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action was changed",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_click_during_capture-manual.html",
      "subtests": [
        {
          "name": "mouse click target during capture",
          "status": "TIMEOUT",
          "message": "Test timed out"
        },
        {
          "name": "Click target when pointerup/down targeted at the same element with no capture",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": ""
    },
    {
      "test": "/pointerevents/pointerevent_disabled_form_control-manual.html",
      "subtests": [
        {
          "name": "mouse pointerevent attributes",
          "status": "TIMEOUT",
          "message": "Test timed out"
        },
        {
          "name": "touch pointerevent attributes",
          "status": "TIMEOUT",
          "message": "Test timed out"
        },
        {
          "name": "pen pointerevent attributes",
          "status": "TIMEOUT",
          "message": "Test timed out"
        }
      ],
      "status": "OK",
      "message": ""
    },
    {
      "test": "/pointerevents/pointerevent_element_haspointercapture-manual.html",
      "subtests": [
        {
          "name": "hasPointerCapture",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_element_haspointercapture_release_pending_capture-manual.html",
      "subtests": [
        {
          "name": "hasPointerCapture test after the pending pointer capture element releases pointer capture",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_fractional_coordinates-manual.html",
      "subtests": [
        {
          "name": "mouse pointerevent events in capturing",
          "status": "PASS",
          "message": null
        },
        {
          "name": "mouse",
          "status": "FAIL",
          "message": "assert_true: pointerdown should have fractional coordinates expected true got false"
        },
        {
          "name": "touch pointerevent events in capturing",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch",
          "status": "FAIL",
          "message": "assert_true: pointerdown should have fractional coordinates expected true got false"
        },
        {
          "name": "pen pointerevent events in capturing",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pen",
          "status": "FAIL",
          "message": "assert_true: pointerdown should have fractional coordinates expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_lostpointercapture_for_disconnected_node-manual.html",
      "subtests": [
        {
          "name": "lostpointercapture event received",
          "status": "PASS",
          "message": null
        },
        {
          "name": "lostpointercapture is dispatched on the document",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_lostpointercapture_is_first-manual.html",
      "subtests": [
        {
          "name": "lostpointercapture is dispatched prior to subsequent events",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_multiple_primary_pointers_boundary_events-manual.html",
      "subtests": [
        {
          "name": "Multi-pointer boundary compat events",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Different pointing devices",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Event log",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerId_scope-manual.html",
      "subtests": [
        {
          "name": "pointerId of an active pointer is the same across iframes",
          "status": "FAIL",
          "message": "assert_equals: PointerId of inner frame pointerover is not correct expected (object) null but got (number) 0"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointercancel_touch-manual.html",
      "subtests": [
        {
          "name": "pointercancel event received",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointercancel event expected true got false"
        },
        {
          "name": " touch pointercancel.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointercancel.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointercancel.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointercancel event expected true got false"
        },
        {
          "name": " touch pointercancel.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch pointercancel.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch pointercancel.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch pointercancel.pressure value is valid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerenter_does_not_bubble-manual.html",
      "subtests": [
        {
          "name": "pointerEnter event does not bubble",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerenter event expected true got false"
        },
        {
          "name": " mouse pointerenter.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerenter.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerenter.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerenter event expected true got false"
        },
        {
          "name": " mouse pointerenter.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerenter.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerenter.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerenter properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerleave_after_pointercancel_touch-manual.html",
      "subtests": [
        {
          "name": "pointerleave event received",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerleave_descendant_over-manual.html",
      "subtests": [
        {
          "name": "pointerleave shouldn't be received on descendant's pointerover",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerleave_descendants-manual.html",
      "subtests": [
        {
          "name": "pointerleave event received",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerleave_does_not_bubble-manual.html",
      "subtests": [
        {
          "name": "pointerLeave event does not bubble",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in pointerleave event expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse pointerleave.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse pointerleave.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse pointerleave properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "ERROR",
      "message": "39 duplicate test names: \" mouse pointerleave event is a PointerEvent event\", \" mouse pointerleave.pointerId attribute exists\", \" mouse pointerleave.pointerId is readonly\", \" mouse pointerleave.pointerId IDL type long (JS type was number)\", \" mouse pointerleave.width attribute exists\", \" mouse pointerleave.width is readonly\", \" mouse pointerleave.width IDL type float (JS type was number)\", \" mouse pointerleave.height attribute exists\", \" mouse pointerleave.height is readonly\", \" mouse pointerleave.height IDL type float (JS type was number)\", \" mouse pointerleave.pressure attribute exists\", \" mouse pointerleave.pressure is readonly\", \" mouse pointerleave.pressure IDL type float (JS type was number)\", \" mouse pointerleave.tiltX attribute exists\", \" mouse pointerleave.tiltX is readonly\", \" mouse pointerleave.tiltX IDL type long (JS type was number)\", \" mouse pointerleave.tiltY attribute exists\", \" mouse pointerleave.tiltY is readonly\", \" mouse pointerleave.tiltY IDL type long (JS type was number)\", \" mouse pointerleave.pointerType attribute exists\", \" mouse pointerleave.pointerType is readonly\", \" mouse pointerleave.pointerType IDL type string (JS type was string)\", \" mouse pointerleave.isPrimary attribute exists\", \" mouse pointerleave.isPrimary is readonly\", \" mouse pointerleave.isPrimary IDL type boolean (JS type was boolean)\", \" mouse pointerleave.detail attribute exists\", \" mouse pointerleave.detail is readonly\", \" mouse pointerleave.detail IDL type long (JS type was number)\", \" mouse pointerleave.detail value is 0.\", \" mouse pointerleave.fromElement attribute exists\", \" mouse pointerleave.fromElement is readonly\", \" mouse pointerleave.fromElement IDL type object (JS type was object)\", \" mouse pointerleave.fromElement value is null.\", \" mouse pointerleave.toElement attribute exists\", \" mouse pointerleave.toElement is readonly\", \" mouse pointerleave.toElement IDL type object (JS type was object)\", \" mouse pointerleave.toElement value is null.\", \" mouse pointerleave.pressure value is valid\", \" mouse pointerleave properties for pointerType = mouse\""
    },
    {
      "test": "/pointerevents/pointerevent_pointerleave_pen-manual.html",
      "subtests": [
        {
          "name": "pointerleave event",
          "status": "FAIL",
          "message": "assert_equals: Test should be run using a pen as input expected \"pen\" but got \"mouse\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointermove-manual.html",
      "subtests": [
        {
          "name": "pointermove event received",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointermove_isprimary_same_as_pointerdown-manual.html",
      "subtests": [
        {
          "name": "pointermove has same isPrimary as last pointerdown",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointermove_on_chorded_mouse_button-manual.html",
      "subtests": [
        {
          "name": "pointermove events received for button state changes",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerout_after_pointercancel_touch-manual.html",
      "subtests": [
        {
          "name": "pointerout event received",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerout_pen-manual.html",
      "subtests": [
        {
          "name": "pointerout event received",
          "status": "FAIL",
          "message": "assert_true: you have to use pen for this test expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_pointerout_received_once-manual.html",
      "subtests": [
        {
          "name": "pointerout received just once",
          "status": "FAIL",
          "message": "assert_true: pointerout received just once expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_releasepointercapture_events_to_original_target-manual.html",
      "subtests": [
        {
          "name": "mouse got/lost pointercapture: subsequent events to target",
          "status": "PASS",
          "message": null
        },
        {
          "name": "mouse pointerover/enter should be received before the target receives gotpointercapture even when the pointer is not over it.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in gotpointercapture event expected true got false"
        },
        {
          "name": " mouse gotpointercapture.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse gotpointercapture.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse gotpointercapture.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in gotpointercapture event expected true got false"
        },
        {
          "name": " mouse gotpointercapture.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse gotpointercapture.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse gotpointercapture.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse gotpointercapture properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in lostpointercapture event expected true got false"
        },
        {
          "name": " mouse lostpointercapture.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " mouse lostpointercapture.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse lostpointercapture.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in lostpointercapture event expected true got false"
        },
        {
          "name": " mouse lostpointercapture.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " mouse lostpointercapture.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " mouse lostpointercapture.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " mouse lostpointercapture properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "mouse pointerout/leave should not be received unless the target just lost the capture.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch got/lost pointercapture: subsequent events to target",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch pointerover/enter should be received before the target receives gotpointercapture even when the pointer is not over it.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in gotpointercapture event expected true got false"
        },
        {
          "name": " touch gotpointercapture.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch gotpointercapture.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch gotpointercapture.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in gotpointercapture event expected true got false"
        },
        {
          "name": " touch gotpointercapture.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch gotpointercapture.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch gotpointercapture.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch gotpointercapture.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture event pointerType is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in lostpointercapture event expected true got false"
        },
        {
          "name": " touch lostpointercapture.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " touch lostpointercapture.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch lostpointercapture.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in lostpointercapture event expected true got false"
        },
        {
          "name": " touch lostpointercapture.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " touch lostpointercapture.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " touch lostpointercapture.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " touch lostpointercapture.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch pointerout/leave should not be received unless the target just lost the capture.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pen got/lost pointercapture: subsequent events to target",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pen pointerover/enter should be received before the target receives gotpointercapture even when the pointer is not over it.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen gotpointercapture event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in gotpointercapture event expected true got false"
        },
        {
          "name": " pen gotpointercapture.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen gotpointercapture.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen gotpointercapture.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in gotpointercapture event expected true got false"
        },
        {
          "name": " pen gotpointercapture.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen gotpointercapture.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen gotpointercapture.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen gotpointercapture properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture event pointerType is correct.",
          "status": "FAIL",
          "message": "assert_equals: pointerType should be the one specified in the test page. expected \"pen\" but got \"mouse\""
        },
        {
          "name": " pen lostpointercapture event is a PointerEvent event",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pointerId attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pointerId is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pointerId IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.width attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.width is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.width IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.height attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.height is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.height IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pressure attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pressure is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pressure IDL type float (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.tiltX attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.tiltX is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.tiltX IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.tiltY attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.tiltY is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.tiltY IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pointerType attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pointerType is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.pointerType IDL type string (JS type was string)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.isPrimary attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.isPrimary is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.isPrimary IDL type boolean (JS type was boolean)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.detail attribute exists",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.detail is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.detail IDL type long (JS type was number)",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.detail value is 0.",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.fromElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute in lostpointercapture event expected true got false"
        },
        {
          "name": " pen lostpointercapture.fromElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.fromElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: fromElement attribute of type object expected true got false"
        },
        {
          "name": " pen lostpointercapture.fromElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: fromElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen lostpointercapture.toElement attribute exists",
          "status": "FAIL",
          "message": "assert_true: toElement attribute in lostpointercapture event expected true got false"
        },
        {
          "name": " pen lostpointercapture.toElement is readonly",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture.toElement IDL type object (JS type was object)",
          "status": "FAIL",
          "message": "assert_true: toElement attribute of type object expected true got false"
        },
        {
          "name": " pen lostpointercapture.toElement value is null.",
          "status": "FAIL",
          "message": "assert_equals: toElement attribute value expected (object) null but got (undefined) undefined"
        },
        {
          "name": " pen lostpointercapture.pressure value is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": " pen lostpointercapture properties for pointerType = mouse",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pen pointerout/leave should not be received unless the target just lost the capture.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_releasepointercapture_invalid_pointerid-manual.html",
      "subtests": [
        {
          "name": "releasePointerCapture: DOMException InvalidPointerId",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_releasepointercapture_onpointercancel_touch-manual.html",
      "subtests": [
        {
          "name": "pointer capture is released on pointercancel",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_releasepointercapture_onpointerup_mouse-manual.html",
      "subtests": [
        {
          "name": "pointerup was received before lostpointercapture",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_releasepointercapture_release_right_after_capture-manual.html",
      "subtests": [
        {
          "name": "Release pointer capture right after setpointercapture",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_sequence_at_implicit_release_on_click-manual.html",
      "subtests": [
        {
          "name": "mouse Event sequence at implicit release on click",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch Event sequence at implicit release on click",
          "status": "PASS",
          "message": null
        },
        {
          "name": "pen Event sequence at implicit release on click",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_sequence_at_implicit_release_on_drag-manual.html",
      "subtests": [
        {
          "name": "touch Event sequence at implicit release on drag",
          "status": "FAIL",
          "message": "assert_equals: expected \"pointercancel, lostpointercapture, pointerout, pointerleave\" but got \"pointerup, lostpointercapture, pointerout, pointerleave\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_setpointercapture_disconnected-manual.html",
      "subtests": [
        {
          "name": "setPointerCapture: DOMException InvalidStateError",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_setpointercapture_inactive_button_mouse-manual.html",
      "subtests": [
        {
          "name": "pointer capture is not set while button state is inactive",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_setpointercapture_invalid_pointerid-manual.html",
      "subtests": [
        {
          "name": "setPointerCapture: DOMException InvalidPointerId",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_setpointercapture_override_pending_capture_element-manual.html",
      "subtests": [
        {
          "name": "setPointerCapture: override the pending pointer capture element",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_setpointercapture_relatedtarget-manual.html",
      "subtests": [
        {
          "name": "pointerover shouldn't trigger for the purple rectangle while the black rectangle has capture",
          "status": "PASS",
          "message": null
        },
        {
          "name": "relatedTarget should not be null even when the capture is set.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_setpointercapture_to_same_element_twice-manual.html",
      "subtests": [
        {
          "name": "setPointerCapture: set to the element which already captured the pointer",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_suppress_compat_events_on_click-manual.html",
      "subtests": [
        {
          "name": "Suppress compat mouse events on click",
          "status": "PASS",
          "message": null
        },
        {
          "name": "primary pointer pointerdown@target0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "primary pointer pointerdown@target1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Event log",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_suppress_compat_events_on_drag_mouse-manual.html",
      "subtests": [
        {
          "name": "Suppress compat mouse events on drag",
          "status": "PASS",
          "message": null
        },
        {
          "name": "primary pointer pointerdown@target0",
          "status": "PASS",
          "message": null
        },
        {
          "name": "primary pointer pointerdown@target1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "mousedown's time stamp should be the same as pointerdown's time stamp.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Pointer Event: Suppress compatibility mouse events on drag",
          "status": "PASS",
          "message": null
        },
        {
          "name": "mousemove's time stamp should be the same as pointermove's time stamp.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Pointer Event: Suppress compatibility mouse events on drag 1",
          "status": "PASS",
          "message": null
        },
        {
          "name": "mouseup's time stamp should be the same as pointerup's time stamp.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Pointer Event: Suppress compatibility mouse events on drag 2",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Event log",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-auto-css_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-button-test_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test out of element",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch-action attribute test in element",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-inherit_child-auto-child-none_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-inherit_child-none_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-inherit_child-pan-x-child-pan-x_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-inherit_child-pan-x-child-pan-y_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-inherit_highest-parent-none_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-inherit_parent-none_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-keyboard-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-mouse-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-none-css_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-pan-x-css_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-pan-x-pan-y-pan-y_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-pan-x-pan-y_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-pan-y-css_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-rotated-divs_touch-manual.html",
      "subtests": [
        {
          "name": "touch 'touch-action: pan-x' in a rotated div",
          "status": "FAIL",
          "message": "assert_equals: expected \"pointercancel, pointercancel, pointerup, pointerup\" but got \"pointerup, pointerup, pointerup\""
        },
        {
          "name": "touch 'touch-action: pan-y' in a rotated div",
          "status": "FAIL",
          "message": "assert_equals: expected \"pointerup, pointerup, pointercancel, pointercancel\" but got \"pointerup, pointerup, pointerup\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-span-test_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test out of element",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch-action attribute test in element",
          "status": "FAIL",
          "message": "assert_true: target0 x and y scroll offsets should be greater than 0 after first two interactions (outside red border) respectively expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-svg-test_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test out of SVG",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch-action attribute test in SVG",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerevent_touch-action-table-test_touch-manual.html",
      "subtests": [
        {
          "name": "touch-action attribute test on the cell",
          "status": "PASS",
          "message": null
        },
        {
          "name": "touch-action attribute test on the row",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerlock/pointerevent_movementxy-manual.html",
      "subtests": [
        {
          "name": "mouse pointerevent attributes",
          "status": "FAIL",
          "message": "assert_equals: movementY should be the delta between current event's and last event's screenY expected 1 but got 2"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerlock/pointerevent_movementxy_when_locked-manual.html",
      "subtests": [
        {
          "name": "mouse pointerevent movementX/Y when lock test",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/pointerevents/pointerlock/pointerevent_pointerlock_after_pointercapture-manual.html",
      "subtests": [
        {
          "name": "mouse no pointercapture while pointerlock",
          "status": "FAIL",
          "message": "assert_equals: document.pointerLockElement should be div1. expected Element node <div id=\"div1\" style=\"width:800px;height:250px;background... but got null"
        }
      ],
      "status": "ERROR",
      "message": "uncaught exception: Error: assert_unreached: Pointer lock error Reached unreachable code"
    },
    {
      "test": "/pointerevents/pointerlock/pointerevent_pointerlock_supercedes_capture-manual.html",
      "subtests": [
        {
          "name": "mouse no pointercapture while pointerlock",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}