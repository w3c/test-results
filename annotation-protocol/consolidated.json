{
  "ua": [
    "CC01",
    "RI01"
  ],
  "results": {
    "/annotation-protocol/server/server-manual.html": {
      "byUA": {
        "CC01": "OK",
        "RI01": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2
      },
      "subtests": {
        "Container MUST end in a \"/\" character": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST support GET (check Allow on GET)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST support HEAD (check Allow on GET)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST support OPTIONS (check Allow on GET)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST have a Content-Type header with the application/ld+json media type": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST response with the JSON-LD representation (by default)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST return a description of the container with BasicContainer": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST return a description of the container with AnnotationCollection": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST return a Link header (rfc5988) on all responses": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST have an ETag header": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST have a Vary header with Accept in the value": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST advertise its type by including a link where the rel parameter value is type and the target IRI is the appropriate Container Type": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST advertise that it imposes Annotation protocol specific constraints by including a link where the target IRI is http://www.w3.org/TR/annotation-protocol/, and the rel parameter value is the IRI http://www.w3.org/ns/ldp#constrainedBy": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST support HEAD method": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST support OPTIONS method": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Containers MUST include a Content-Location header with the IRI as its value": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Container's Content-Location and `id` MUST match": {
          "byUA": {
            "CC01": "FAIL",
            "RI01": "PASS"
          },
          "UAmessage": {
            "CC01": "assert_true: expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 1
          }
        },
        "Annotation Pages must have a link to the container they are part of, using the partOf property": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotation Pages MUST have a link to the previous page in the sequence, using the prev property (if not the first page)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotation Pages MUST have a link to the next page in the sequence, using the next property (if not the last page)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotations MUST support GET (check Allow on GET)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotations MUST support HEAD (check Allow on GET)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotations MUST support OPTIONS (check Allow on GET)": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotations MUST have a Content-Type header with the application/ld+json media type": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotations MUST have a Link header entry where the target IRI is http://www.w3.org/ns/ldp#Resource and the rel parameter value is type": {
          "byUA": {
            "CC01": "FAIL",
            "RI01": "PASS"
          },
          "UAmessage": {
            "CC01": "assert_equals: <http://www.w3.org/ns/ldp#Resource>; rel=\"type\" not found in Link expected \"<http://www.w3.org/ns/ldp#Resource>; rel=\\\"type\\\"\" but got \"<http://www.w3.org/ns/ldp#Resource>;rel=\\\"type\\\"\""
          },
          "totals": {
            "FAIL": 1,
            "PASS": 1
          }
        },
        "Annotations MUST have an ETag header": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotations MUST have a Vary header with Accept in the value": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotations MUST support HEAD method": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotations MUST support OPTIONS method": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Created Annotation MUST have an id property": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Created Annotation MUST have an id that starts with the Container IRI": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Created Annotation MUST preserve any canonical IRI": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotation Server MUST respond with a 201 Created code if the creation is successful": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Location header SHOULD match the id of the new Annotation": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotation update must be done with the PUT method": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotation deletion with DELETE method MUST return a 204 status": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Annotation server SHOULD use HTTPS rather than HTTP": {
          "byUA": {
            "CC01": "FAIL",
            "RI01": "FAIL"
          },
          "UAmessage": {
            "CC01": "assert_equals: Server is not using HTTPS expected \"http:\" but got \"https\"",
            "RI01": "assert_equals: Server is not using HTTPS expected \"http:\" but got \"https\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "SHOULD return the full annotation descriptions": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "SHOULD include the total property with the total number of annotations in the container": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "SHOULD have a link to the first page of its contents using `first`": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "SHOULD have a link to the last page of its contents using `last`": {
          "byUA": {
            "CC01": "FAIL",
            "RI01": "PASS"
          },
          "UAmessage": {
            "CC01": "assert_true: expected true got false"
          },
          "totals": {
            "FAIL": 1,
            "PASS": 1
          }
        },
        "Response contains annotations via `items` when it SHOULD NOT": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Response contains annotations via `ldp:contains` when it SHOULD NOT": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "SHOULD include Prefer in the Vary header": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "SHOULD NOT [receive] the Prefer header when requesting the page": {
          "byUA": {
            "CC01": "PASS",
            "RI01": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    }
  }
}