{
  "results": [
    {
      "test": "/core-aam/alert-manual.html",
      "subtests": [
        {
          "name": "alert",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/alertdialog-manual.html",
      "subtests": [
        {
          "name": "alertdialog",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/application-manual.html",
      "subtests": [
        {
          "name": "application",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-busy_false-manual.html",
      "subtests": [
        {
          "name": "aria-busy=false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-busy_true-manual.html",
      "subtests": [
        {
          "name": "aria-busy=true",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-busy_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-busy value changes",
          "status": "PASS",
          "message": null
        },
        {
          "name": "aria-busy value changes 1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-checked_false_on_checkbox-manual.html",
      "subtests": [
        {
          "name": "aria-checked=false on checkbox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-checked_false_on_menuitemradio-manual.html",
      "subtests": [
        {
          "name": "aria-checked=false on menuitemradio",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-checked_mixed-manual.html",
      "subtests": [
        {
          "name": "aria-checked=mixed",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-checked_true_on_checkbox-manual.html",
      "subtests": [
        {
          "name": "aria-checked=true on checkbox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-checked_true_on_menuitemradio-manual.html",
      "subtests": [
        {
          "name": "aria-checked=true on menuitemradio",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-checked_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-checked value changes",
          "status": "PASS",
          "message": null
        },
        {
          "name": "aria-checked value changes 1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-disabled_false-manual.html",
      "subtests": [
        {
          "name": "aria-disabled=false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-disabled_true-manual.html",
      "subtests": [
        {
          "name": "aria-disabled=true",
          "status": "PASS",
          "message": null
        },
        {
          "name": "aria-disabled=true 1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-disabled_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-disabled value changes",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-expanded_false-manual.html",
      "subtests": [
        {
          "name": "aria-expanded=false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-expanded_true-manual.html",
      "subtests": [
        {
          "name": "aria-expanded=true",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-expanded_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-expanded value changes",
          "status": "PASS",
          "message": null
        },
        {
          "name": "aria-expanded value changes 1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-grabbed_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-grabbed value changes",
          "status": "FAIL",
          "message": "assert_true: \"event type is EVENT_OBJECT_SELECTION\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-haspopup_dialog_new-manual.html",
      "subtests": [
        {
          "name": "aria-haspopup=dialog NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-haspopup_false-manual.html",
      "subtests": [
        {
          "name": "aria-haspopup=false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-haspopup_listbox_new-manual.html",
      "subtests": [
        {
          "name": "aria-haspopup=listbox NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-haspopup_menu_new-manual.html",
      "subtests": [
        {
          "name": "aria-haspopup=menu NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-haspopup_tree_new-manual.html",
      "subtests": [
        {
          "name": "aria-haspopup=tree NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-haspopup_true-manual.html",
      "subtests": [
        {
          "name": "aria-haspopup=true",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-hidden_true-manual.html",
      "subtests": [
        {
          "name": "aria-hidden=true",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-hidden_true_when_element_is_focused_or_fires_event_new-manual.html",
      "subtests": [
        {
          "name": "aria-hidden=true when element is focused or fires event NEW",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-invalid_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-invalid value changes",
          "status": "PASS",
          "message": null
        },
        {
          "name": "aria-invalid value changes 1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-multiselectable_false-manual.html",
      "subtests": [
        {
          "name": "aria-multiselectable=false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-multiselectable_true-manual.html",
      "subtests": [
        {
          "name": "aria-multiselectable=true",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-pressed_false-manual.html",
      "subtests": [
        {
          "name": "aria-pressed=false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-pressed_mixed-manual.html",
      "subtests": [
        {
          "name": "aria-pressed=mixed",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-pressed_true-manual.html",
      "subtests": [
        {
          "name": "aria-pressed=true",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-pressed_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-pressed value changes",
          "status": "FAIL",
          "message": "assert_true: \"event type is EVENT_OBJECT_STATECHANGE\" failed ;  expected true got false"
        },
        {
          "name": "aria-pressed value changes 1",
          "status": "FAIL",
          "message": "assert_true: \"event type is EVENT_OBJECT_STATECHANGE\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-readonly_false-manual.html",
      "subtests": [
        {
          "name": "aria-readonly=false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-readonly_is_unspecified_on_gridcell_new-manual.html",
      "subtests": [
        {
          "name": "aria-readonly is unspecified on gridcell NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-readonly_true_on_checkbox-manual.html",
      "subtests": [
        {
          "name": "aria-readonly=true on checkbox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-readonly_true_on_radiogroup-manual.html",
      "subtests": [
        {
          "name": "aria-readonly=true on radiogroup",
          "status": "PASS",
          "message": null
        },
        {
          "name": "aria-readonly=true on radiogroup 1",
          "status": "FAIL",
          "message": "assert_false: NOTRUN: No assertion for API MSAA expected false got true"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-readonly_true_on_textbox-manual.html",
      "subtests": [
        {
          "name": "aria-readonly=true on textbox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-readonly_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-readonly value changes",
          "status": "PASS",
          "message": null
        },
        {
          "name": "aria-readonly value changes 1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-required_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-required value changes",
          "status": "PASS",
          "message": null
        },
        {
          "name": "aria-required value changes 1",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-selected_false-manual.html",
      "subtests": [
        {
          "name": "aria-selected=false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-selected_true-manual.html",
      "subtests": [
        {
          "name": "aria-selected=true",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-valuenow_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-valuenow value changes",
          "status": "FAIL",
          "message": "assert_true: \"event type is EVENT_OBJECT_VALUECHANGE\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/aria-valuetext_value_changes-manual.html",
      "subtests": [
        {
          "name": "aria-valuetext value changes",
          "status": "FAIL",
          "message": "assert_true: \"event type is EVENT_OBJECT_VALUECHANGE\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/article-manual.html",
      "subtests": [
        {
          "name": "article",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/button_with_aria-haspopup_dialog_new-manual.html",
      "subtests": [
        {
          "name": "button with aria-haspopup=\"dialog\" NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/button_with_aria-haspopup_true-manual.html",
      "subtests": [
        {
          "name": "button with aria-haspopup=\"true\"",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/button_with_default_values_for_aria-pressed_and_aria-haspopup-manual.html",
      "subtests": [
        {
          "name": "button with default values for aria-pressed and aria-haspopup",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/button_with_defined_value_for_aria-pressed-manual.html",
      "subtests": [
        {
          "name": "button with defined value for aria-pressed",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/cell_new-manual.html",
      "subtests": [
        {
          "name": "cell NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/checkbox-manual.html",
      "subtests": [
        {
          "name": "checkbox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/columnheader-manual.html",
      "subtests": [
        {
          "name": "columnheader",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/combobox-manual.html",
      "subtests": [
        {
          "name": "combobox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/dialog-manual.html",
      "subtests": [
        {
          "name": "dialog",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/directory-manual.html",
      "subtests": [
        {
          "name": "directory",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/document-manual.html",
      "subtests": [
        {
          "name": "document",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_element_hidden_with_css_display_none-manual.html",
      "subtests": [
        {
          "name": "Exclude element hidden with CSS display:none",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_element_hidden_with_css_visibility_hidden-manual.html",
      "subtests": [
        {
          "name": "Exclude element hidden with CSS visibility:hidden",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_element_hidden_with_html5_hidden-manual.html",
      "subtests": [
        {
          "name": "Exclude element hidden with HTML5 hidden",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_button-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of button",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_checkbox_new-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of checkbox NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_img-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of img",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_math-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of math",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_menuitemcheckbox_new-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of menuitemcheckbox NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_menuitemradio_new-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of menuitemradio NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_option_new-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of option NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_progressbar-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of progressbar",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_radio_new-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of radio NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_scrollbar-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of scrollbar",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_separator-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of separator",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_slider-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of slider",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_switch_new-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of switch NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/exclude_presentational_children_of_tab_new-manual.html",
      "subtests": [
        {
          "name": "Exclude presentational children of tab NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is false\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/feed_new-manual.html",
      "subtests": [
        {
          "name": "feed NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/figure_new-manual.html",
      "subtests": [
        {
          "name": "figure NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/grid-manual.html",
      "subtests": [
        {
          "name": "grid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/gridcell-manual.html",
      "subtests": [
        {
          "name": "gridcell",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/group-manual.html",
      "subtests": [
        {
          "name": "group",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/img-manual.html",
      "subtests": [
        {
          "name": "img",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_referenced_by_global_aria-controls-manual.html",
      "subtests": [
        {
          "name": "Include element referenced by global aria-controls",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_referenced_by_global_aria-describedby-manual.html",
      "subtests": [
        {
          "name": "Include element referenced by global aria-describedby",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_referenced_by_global_aria-details_new-manual.html",
      "subtests": [
        {
          "name": "Include element referenced by global aria-details NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_referenced_by_global_aria-errormessage_new-manual.html",
      "subtests": [
        {
          "name": "Include element referenced by global aria-errormessage NEW",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_referenced_by_global_aria-flowto-manual.html",
      "subtests": [
        {
          "name": "Include element referenced by global aria-flowto",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_referenced_by_global_aria-labelledby-manual.html",
      "subtests": [
        {
          "name": "Include element referenced by global aria-labelledby",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_referenced_by_global_aria-owns-manual.html",
      "subtests": [
        {
          "name": "Include element referenced by global aria-owns",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_that_is_focusable-manual.html",
      "subtests": [
        {
          "name": "Include element that is focusable",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/include_element_with_id_inside_element_with_aria-activedescendant-manual.html",
      "subtests": [
        {
          "name": "Include element with ID inside element with aria-activedescendant",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/link-manual.html",
      "subtests": [
        {
          "name": "link",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/list-manual.html",
      "subtests": [
        {
          "name": "list",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/listbox_not_owned_by_or_child_of_combobox-manual.html",
      "subtests": [
        {
          "name": "listbox not owned by or child of combobox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/listbox_owned_by_or_child_of_combobox-manual.html",
      "subtests": [
        {
          "name": "listbox owned by or child of combobox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/listitem-manual.html",
      "subtests": [
        {
          "name": "listitem",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/marquee-manual.html",
      "subtests": [
        {
          "name": "marquee",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/math-manual.html",
      "subtests": [
        {
          "name": "math",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/menu-manual.html",
      "subtests": [
        {
          "name": "menu",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/menu_child_of_menu_item-manual.html",
      "subtests": [
        {
          "name": "menu child of menu item",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/menubar-manual.html",
      "subtests": [
        {
          "name": "menubar",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/menuitem_not_owned_by_or_child_of_group-manual.html",
      "subtests": [
        {
          "name": "menuitem not owned by or child of group",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/menuitem_owned_by_or_child_of_group-manual.html",
      "subtests": [
        {
          "name": "menuitem owned by or child of group",
          "status": "FAIL",
          "message": "assert_true: \"property role is ROLE_SYSTEM_MENUITEM\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/menuitemcheckbox-manual.html",
      "subtests": [
        {
          "name": "menuitemcheckbox",
          "status": "FAIL",
          "message": "assert_true: \"property role is ROLE_SYSTEM_CHECKBUTTON or ROLE_SYSTEM_MENUITEM\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/menuitemradio-manual.html",
      "subtests": [
        {
          "name": "menuitemradio",
          "status": "FAIL",
          "message": "assert_true: \"property role is ROLE_SYSTEM_RADIOBUTTON or ROLE_SYSTEM_MENUITEM\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/none_new-manual.html",
      "subtests": [
        {
          "name": "none NEW",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/none_used_on_element_that_is_focused_or_fires_event-manual.html",
      "subtests": [
        {
          "name": "none used on element that is focused or fires event",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/option_inside_combobox-manual.html",
      "subtests": [
        {
          "name": "option inside combobox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/option_not_inside_combobox-manual.html",
      "subtests": [
        {
          "name": "option not inside combobox",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/presentation-manual.html",
      "subtests": [
        {
          "name": "presentation",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/presentation_used_on_element_that_is_focused_or_fires_event-manual.html",
      "subtests": [
        {
          "name": "presentation used on element that is focused or fires event",
          "status": "FAIL",
          "message": "assert_true: \"property accessible is true\" failed [ASSERTION][AttaPropertyAssertion]ERROR: local variable 'value' referenced before assignment;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/progressbar-manual.html",
      "subtests": [
        {
          "name": "progressbar",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/radio-manual.html",
      "subtests": [
        {
          "name": "radio",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/radiogroup-manual.html",
      "subtests": [
        {
          "name": "radiogroup",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/row_inside_treegrid-manual.html",
      "subtests": [
        {
          "name": "row inside treegrid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/row_not_inside_treegrid-manual.html",
      "subtests": [
        {
          "name": "row not inside treegrid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/rowgroup-manual.html",
      "subtests": [
        {
          "name": "rowgroup",
          "status": "FAIL",
          "message": "assert_true: ATTA returned ERROR with message:  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/rowheader-manual.html",
      "subtests": [
        {
          "name": "rowheader",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/scrollbar-manual.html",
      "subtests": [
        {
          "name": "scrollbar",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/searchbox_new-manual.html",
      "subtests": [
        {
          "name": "searchbox NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/separator_focusable_new-manual.html",
      "subtests": [
        {
          "name": "separator focusable NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/separator_non-focusable-manual.html",
      "subtests": [
        {
          "name": "separator non-focusable",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/slider-manual.html",
      "subtests": [
        {
          "name": "slider",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/spinbutton-manual.html",
      "subtests": [
        {
          "name": "spinbutton",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/status-manual.html",
      "subtests": [
        {
          "name": "status",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/switch_new-manual.html",
      "subtests": [
        {
          "name": "switch NEW",
          "status": "FAIL",
          "message": "assert_true: \"property role is ROLE_SYSTEM_CHECKBUTTON\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/tab-manual.html",
      "subtests": [
        {
          "name": "tab",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/table_new-manual.html",
      "subtests": [
        {
          "name": "table NEW",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/tablist-manual.html",
      "subtests": [
        {
          "name": "tablist",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/tabpanel-manual.html",
      "subtests": [
        {
          "name": "tabpanel",
          "status": "FAIL",
          "message": "assert_true: \"property role is ROLE_SYSTEM_PANE or ROLE_SYSTEM_PROPERTYPAGE\" failed ;  expected true got false"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/textbox_when_aria-multiline_is_false-manual.html",
      "subtests": [
        {
          "name": "textbox when aria-multiline is false",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/textbox_when_aria-multiline_is_true-manual.html",
      "subtests": [
        {
          "name": "textbox when aria-multiline is true",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/toolbar-manual.html",
      "subtests": [
        {
          "name": "toolbar",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/tooltip-manual.html",
      "subtests": [
        {
          "name": "tooltip",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/tree-manual.html",
      "subtests": [
        {
          "name": "tree",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/treegrid-manual.html",
      "subtests": [
        {
          "name": "treegrid",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/core-aam/treeitem-manual.html",
      "subtests": [
        {
          "name": "treeitem",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}
