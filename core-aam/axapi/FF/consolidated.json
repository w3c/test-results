{
  "ua": [
    "FF"
  ],
  "results": {
    "/core-aam/alert-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "alert": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/alertdialog-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "alertdialog": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXWindow  \n; \"property AXRoleDescription is web alert dialog\" failed   \n**Actual value:** alert dialog  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/application-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "application": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXWebApplication\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is web application\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-atomic_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-atomic=false": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIAAtomic is NO\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-atomic_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-atomic=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIAAtomic is YES\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-busy_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-busy=false": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXElementBusy is NO\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-busy_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-busy=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXElementBusy is YES\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-busy_value_changes-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-busy value changes": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXElementBusyChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "aria-busy value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXElementBusyChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-checked_false_on_checkbox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-checked=false on checkbox": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-checked_false_on_menuitemradio-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-checked=false on menuitemradio": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValue is 0\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-checked_mixed-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-checked=mixed": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValue is 2\" failed   \n**Actual value:** 0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-checked_true_on_checkbox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-checked=true on checkbox": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValue is 1\" failed   \n**Actual value:** 0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-checked_true_on_menuitemradio-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-checked=true on menuitemradio": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValue is 1\" failed   \n**Actual value:**   \n; \"property AXMenuItemMarkChar is âœ“\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-checked_value_changes-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-checked value changes": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXValueChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "aria-checked value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXValueChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-colcount_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-colcount NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIAColumnCount is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-colindex_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-colindex NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIAColumnIndex is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-colspan_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-colspan NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXColumnIndexRange.length is 3\" failed   \n**Actual value:** 1  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-controls-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-controls": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXLinkedUIElements is [list]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-current_with_non-false_allowed_value_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-current with non-false allowed value NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIACurrent is step\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-current_with_unrecognized_value_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-current with unrecognized value NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIACurrent is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-describedby-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-describedby": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-disabled_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-disabled=false": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-disabled_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-disabled=true": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-dropeffect_copy-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-dropeffect=copy": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXDropEffects is [copy]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-dropeffect_execute-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-dropeffect=execute": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXDropEffects is [execute]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-dropeffect_link-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-dropeffect=link": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXDropEffects is [link]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-dropeffect_move-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-dropeffect=move": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXDropEffects is [move]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-dropeffect_popup-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-dropeffect=popup": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXDropEffects is [popup]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-errormessage-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-errormessage": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValidationError is hello world\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-expanded_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-expanded=false": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXExpanded is NO\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-expanded_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-expanded=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXExpanded is YES\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-expanded_value_changes-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-expanded value changes": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXRowExpanded\" failed   \n; \"event type is AXRowCountChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "aria-expanded value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXRowCollapsed\" failed   \n; \"event type is AXRowCountChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-flowto-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-flowto": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXLinkedUIElements is [next]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-grabbed_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-grabbed=false": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXGrabbed is NO\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-grabbed_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-grabbed=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXGrabbed is YES\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-haspopup_dialog_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-haspopup=dialog NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property actions contains AXShowMenu\" failed   \n**Actual value:** []  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-haspopup_listbox_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-haspopup=listbox NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property actions contains AXShowMenu\" failed   \n**Actual value:** []  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-haspopup_menu_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-haspopup=menu NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property actions contains AXShowMenu\" failed   \n**Actual value:** []  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-haspopup_tree_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-haspopup=tree NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property actions contains AXShowMenu\" failed   \n**Actual value:** []  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-haspopup_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-haspopup=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property actions contains AXShowMenu\" failed   \n**Actual value:** []  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-hidden_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-hidden=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-hidden_true_when_element_is_focused_or_fires_event_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-hidden=true when element is focused or fires event NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-hidden_value_changes-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-hidden value changes": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXUIElementDestroyed\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "aria-hidden value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXUIElementCreated\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-invalid_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-invalid=false": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXInvalid is false\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-invalid_grammar-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-invalid=grammar": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXInvalid is grammar\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-invalid_spelling-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-invalid=spelling": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXInvalid is spelling\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-invalid_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-invalid=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXInvalid is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-invalid_value_changes-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-invalid value changes": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXInvalidStatusChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        },
        "aria-invalid value changes 1": {
          "stNum": 1,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXInvalidStatusChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-invalid_with_unrecognized_value_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-invalid with unrecognized value NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXInvalid is true\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-label-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-label": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXDescription is hello world\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-labelledby-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-labelledby": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXDescription is hello world\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-level_on_heading-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-level on heading": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValue is 2\" failed   \n**Actual value:** 0  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-level_on_non-heading-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-level on non-heading": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXDisclosureLevel is 4\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-live_assertive-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-live=assertive": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIALive is assertive\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-live_off-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-live=off": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIALive is off\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-live_polite-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-live=polite": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIALive is polite\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-modal_false_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-modal=false NEW 1": {
          "stNum": 1,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-modal_true_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-modal=true NEW 1": {
          "stNum": 1,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-orientation_horizontal-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-orientation=horizontal": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-orientation_undefined_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-orientation=undefined NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXOrientation is AXUnknownOrientation\" failed   \n**Actual value:** AXVerticalOrientation  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-orientation_vertical-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-orientation=vertical": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-owns_may_need_manual_verification-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-owns may need manual verification": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXOwns is [owned1,owned2]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-placeholder_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-placeholder NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXPlaceholderValue is hello world\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-posinset-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-posinset": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIAPosInSet is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-pressed_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-pressed=false": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValue is 0\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-pressed_mixed-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-pressed=mixed": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValue is 2\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-pressed_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-pressed=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValue is 1\" failed   \n**Actual value:**   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-readonly_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-readonly=false": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is YES\" failed   \n**Actual value:** false  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-readonly_is_unspecified_on_gridcell_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-readonly is unspecified on gridcell NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-readonly_true_on_checkbox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-readonly=true on checkbox": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-readonly_true_on_radiogroup-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-readonly=true on radiogroup": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-readonly_true_on_textbox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-readonly=true on textbox": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"result AXUIElementIsAttributeSettable(AXValue) is NO\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-relevant-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-relevant": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIARelevant is additions\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-required_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-required=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRequired is YES\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-roledescription_is_empty_or_whitespace_characters_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-roledescription is empty or whitespace characters NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-roledescription_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-roledescription NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRoleDescription is hello world\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-rowcount_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-rowcount NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIARowCount is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-rowindex_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-rowindex NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIARowIndex is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-rowspan_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-rowspan NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRowIndexRange.length is 2\" failed   \n**Actual value:** 1  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-selected_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-selected=false": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSelected is NO\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-selected_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-selected=true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSelected is YES\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-setsize_-1_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-setsize=-1 NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIASetSize is -1\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-setsize_3-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-setsize=3": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXARIASetSize is 3\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-sort_ascending-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-sort=ascending": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSortDirection is AXAscendingSortDirection\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-sort_descending-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-sort=descending": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSortDirection is AXDescendingSortDirection\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-sort_other-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-sort=other": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSortDirection is AXUnknownSortDirection\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-valuemax-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-valuemax": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXMaxValue is 10\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-valuemin-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-valuemin": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXMinValue is 2\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-valuenow-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-valuenow": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/aria-valuenow_value_changes-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-valuenow value changes": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXValueChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-valuetext-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-valuetext": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXValueDescription is hello world\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/aria-valuetext_value_changes-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "aria-valuetext value changes": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"event type is AXValueChanged\" failed   \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/article-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "article": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/banner-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "banner": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXLandmarkBanner\" failed   \n**Actual value:** AXApplicationGroup  \n; \"property AXRoleDescription is banner\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/button_with_aria-haspopup_dialog_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "button with aria-haspopup=\"dialog\" NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** button  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** ['AXPress']  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/button_with_aria-haspopup_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "button with aria-haspopup=\"true\"": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXPopUpButton\" failed   \n**Actual value:** AXMenuButton  \n; \"property AXRoleDescription is pop up button\" failed   \n**Actual value:** menu button  \n; \"property actions contains AXShowMenu\" failed   \n**Actual value:** []  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/button_with_default_values_for_aria-pressed_and_aria-haspopup-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "button with default values for aria-pressed and aria-haspopup": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/button_with_defined_value_for_aria-pressed-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "button with defined value for aria-pressed": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXCheckBox\" failed   \n**Actual value:** AXButton  \n; \"property AXSubrole is AXToggle\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is toggle button\" failed   \n**Actual value:** button  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/cell_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "cell NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/checkbox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "checkbox": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/columnheader-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "columnheader": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/combobox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "combobox": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/complementary-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "complementary": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXLandmarkComplementary\" failed   \n**Actual value:** AXApplicationGroup  \n; \"property AXRoleDescription is complementary\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/contentinfo-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "contentinfo": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXLandmarkContentInfo\" failed   \n**Actual value:** AXApplicationGroup  \n; \"property AXRoleDescription is content information\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/definition-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "definition": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXDefinition\" failed   \n**Actual value:** AXApplicationGroup  \n; \"property AXRoleDescription is definition\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/dialog-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "dialog": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXWindow  \n; \"property AXRoleDescription is web dialog\" failed   \n**Actual value:** window  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/directory-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "directory": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/document-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "document": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXWebArea  \n; \"property AXRoleDescription is document\" failed   \n**Actual value:** HTML Content  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_element_hidden_with_css_display_none-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude element hidden with CSS display:none": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/exclude_element_hidden_with_css_visibility_hidden-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude element hidden with CSS visibility:hidden": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/exclude_element_hidden_with_html5_hidden-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude element hidden with HTML5 hidden": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_button-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of button": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_checkbox_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of checkbox NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_img-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of img": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_math-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of math": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_menuitemcheckbox_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of menuitemcheckbox NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_menuitemradio_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of menuitemradio NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_option_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of option NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_progressbar-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of progressbar": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_radio_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of radio NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_scrollbar-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of scrollbar": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_separator-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of separator": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_slider-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of slider": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_switch_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of switch NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/exclude_presentational_children_of_tab_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Exclude presentational children of tab NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/feed_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "feed NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXApplicationGroup\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is feed\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/figure_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "figure NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/form-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "form": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/grid-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "grid": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXColumnHeaderUIElements is [colheader1,colheader2]\" failed   \n**Actual value:** None  \n; \"property AXHeader is AXGroup\" failed   \n**Actual value:** None  \n; \"property AXRowHeaderUIElements is [rowheader1,rowheader2]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/gridcell-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "gridcell": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXCell\" failed   \n**Actual value:** AXGroup  \n; \"property AXRoleDescription is cell\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/group-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "group": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXApplicationGroup\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/heading-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "heading": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/img-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "img": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/include_element_referenced_by_global_aria-controls-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Include element referenced by global aria-controls": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/include_element_referenced_by_global_aria-describedby-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Include element referenced by global aria-describedby": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/include_element_referenced_by_global_aria-errormessage_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Include element referenced by global aria-errormessage NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/include_element_referenced_by_global_aria-flowto-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Include element referenced by global aria-flowto": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/include_element_referenced_by_global_aria-labelledby-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Include element referenced by global aria-labelledby": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/include_element_referenced_by_global_aria-owns-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Include element referenced by global aria-owns": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/include_element_that_is_focusable-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Include element that is focusable": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/include_element_with_id_inside_element_with_aria-activedescendant-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "Include element with ID inside element with aria-activedescendant": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/link-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "link": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/list-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "list": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/listbox_not_owned_by_or_child_of_combobox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "listbox not owned by or child of combobox": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/listbox_owned_by_or_child_of_combobox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "listbox owned by or child of combobox": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXList\" failed   \n**Actual value:** AXMenu  \n; \"property AXRoleDescription is list\" failed   \n**Actual value:** menu  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/listitem-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "listitem": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/log-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "log": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/main-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "main": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXLandmarkMain\" failed   \n**Actual value:** AXApplicationGroup  \n; \"property AXRoleDescription is main\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/marquee-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "marquee": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXUnknown  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/math-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "math": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXUnknown  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/menu-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "menu": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/menu_child_of_menu_item-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "menu child of menu item": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/menubar-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "menubar": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/menuitem_not_owned_by_or_child_of_group-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "menuitem not owned by or child of group": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/menuitem_owned_by_or_child_of_group-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "menuitem owned by or child of group": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXMenuButton\" failed   \n**Actual value:** AXMenuItem  \n; \"property AXRoleDescription is menu button\" failed   \n**Actual value:** menu item  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/menuitemcheckbox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "menuitemcheckbox": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/menuitemradio-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "menuitemradio": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/navigation-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "navigation": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXLandmarkNavigation\" failed   \n**Actual value:** AXApplicationGroup  \n; \"property AXRoleDescription is navigation\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/none_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "none NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/none_used_on_element_that_is_focused_or_fires_event-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "none used on element that is focused or fires event": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/none_used_on_table_element_with_td_children_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "none used on table element with td children NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/none_used_on_ul_element_with_li_children_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "none used on ul element with li children NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/note-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "note": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/option_inside_combobox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "option inside combobox": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXStaticText\" failed   \n**Actual value:** AXMenuItem  \n; \"property AXRoleDescription is text\" failed   \n**Actual value:** menu item  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/option_not_inside_combobox-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "option not inside combobox": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/presentation-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "presentation": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/presentation_used_on_element_that_is_focused_or_fires_event-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "presentation used on element that is focused or fires event": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/presentation_used_on_table_element_with_td_children_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "presentation used on table element with td children NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/presentation_used_on_ul_element_with_li_children_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "presentation used on ul element with li children NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/progressbar-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "progressbar": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/radio-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "radio": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/radiogroup-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "radiogroup": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/region_with_an_accessible_name_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "region with an accessible name NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/region_without_an_accessible_name_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "region without an accessible name NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/row_inside_treegrid-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "row inside treegrid": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/row_not_inside_treegrid-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "row not inside treegrid": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/rowgroup-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "rowgroup": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property accessible is false\" failed   \n**Actual value:** true  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/rowheader-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "rowheader": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/scrollbar-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "scrollbar": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/search-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "search": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXLandmarkSearch\" failed   \n**Actual value:** AXApplicationGroup  \n; \"property AXRoleDescription is search\" failed   \n**Actual value:** group  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/searchbox_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "searchbox NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXSubrole is AXSearchField\" failed   \n**Actual value:** None  \n; \"property AXRoleDescription is search text field\" failed   \n**Actual value:** text field  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/separator_focusable_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "separator focusable NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/separator_non-focusable-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "separator non-focusable": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/slider-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "slider": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/spinbutton-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "spinbutton": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/status-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "status": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXUnknown  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/switch_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "switch NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/tab-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "tab": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/table_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "table NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXColumnHeaderUIElements is [colheader1,colheader2]\" failed   \n**Actual value:** None  \n; \"property AXHeader is AXGroup\" failed   \n**Actual value:** None  \n; \"property AXRowHeaderUIElements is [rowheader1,rowheader2]\" failed   \n**Actual value:** None  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/tablist-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "tablist": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/tabpanel-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "tabpanel": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/term_new-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "term NEW": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/textbox_when_aria-multiline_is_false-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "textbox when aria-multiline is false": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/textbox_when_aria-multiline_is_true-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "textbox when aria-multiline is true": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXTextArea\" failed   \n**Actual value:** AXTextField  \n; \"property AXRoleDescription is text entry area\" failed   \n**Actual value:** text field  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/timer-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "timer": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/toolbar-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "toolbar": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/tooltip-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "tooltip": {
          "stNum": 0,
          "byUA": {
            "FF": "FAIL"
          },
          "UAmessage": {
            "FF": "assert_true: \"property AXRole is AXGroup\" failed   \n**Actual value:** AXHelpTag  \n;  expected true got false"
          },
          "totals": {
            "FAIL": 1
          }
        }
      }
    },
    "/core-aam/tree-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "tree": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/treegrid-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "treegrid": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    },
    "/core-aam/treeitem-manual.html": {
      "byUA": {
        "FF": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 1
      },
      "subtests": {
        "treeitem": {
          "stNum": 0,
          "byUA": {
            "FF": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    }
  }
}