{
  "results": [
    {
      "test": "/gyroscope/Gyroscope-disabled-by-feature-policy.https.html",
      "subtests": [
        {
          "name": "Gyroscope: Feature-Policy header gyroscope 'none' disallows the top-level document.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Feature-Policy header gyroscope 'none' disallows same-origin iframes.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Feature-Policy header gyroscope 'none' disallows cross-origin iframes.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/gyroscope/Gyroscope-enabled-by-feature-policy-attribute-redirect-on-load.https.html",
      "subtests": [
        {
          "name": "Gyroscope: Feature-Policy allow='gyroscope' attribute allows same-origin relocation",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Feature-Policy allow='gyroscope' attribute disallows cross-origin relocation",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/gyroscope/Gyroscope-enabled-by-feature-policy-attribute.https.html",
      "subtests": [
        {
          "name": "Gyroscope: Feature-Policy allow='gyroscope' attribute allows same-origin iframe",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Feature-Policy allow='gyroscope' attribute allows cross-origin iframe",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/gyroscope/Gyroscope-enabled-by-feature-policy.https.html",
      "subtests": [
        {
          "name": "Gyroscope: Feature-Policy header gyroscope * allows the top-level document.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Feature-Policy header gyroscope * allows same-origin iframes.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Feature-Policy header gyroscope * allows cross-origin iframes.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/gyroscope/Gyroscope-enabled-on-self-origin-by-feature-policy.https.html",
      "subtests": [
        {
          "name": "Gyroscope: Feature-Policy header gyroscope 'self' allows the top-level document.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Feature-Policy header gyroscope 'self' allows same-origin iframes.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Feature-Policy header gyroscope 'self' disallows cross-origin iframes.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/gyroscope/Gyroscope.https.html",
      "subtests": [
        {
          "name": "Gyroscope: Test that 'onreading' is called and sensor reading is valid",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: sensor reading is correct",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: sensor timestamp is updated when time passes",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Test that sensor can be successfully created and its states are correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: sensor.start() returns undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: no exception is thrown when calling start() on already started sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: sensor.stop() returns undefined",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: no exception is thrown when calling stop() on already stopped sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: Test that fresh reading is fetched on start()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: sensor readings can not be fired on the background tab",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: frequency hint works",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: sensor receives suspend / resume notifications when  cross-origin subframe is focused",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: throw 'NotSupportedError' for an unsupported sensor option",
          "status": "FAIL",
          "message": "assert_throws: function \"() => { new sensorType({invalid: 1}) }\" did not throw"
        },
        {
          "name": "Gyroscope: throw 'TypeError' if frequency is invalid",
          "status": "FAIL",
          "message": "assert_throws: when freq is undefined function \"() => { new sensorType({frequency: freq}) }\" did not throw"
        },
        {
          "name": "Gyroscope: sensor reading is correct when options.referenceFrame is 'screen'",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope: throw 'TypeError' if referenceFrame is not one of enumeration values",
          "status": "FAIL",
          "message": "assert_throws: when refFrame is invalid function \"() => { new sensorType({referenceFrame: refFrame}) }\" did not throw"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/gyroscope/Gyroscope_insecure_context.html",
      "subtests": [
        {
          "name": "Gyroscope is not exposed in an insecure context",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/gyroscope/idlharness.https.html",
      "subtests": [
        {
          "name": "Test IDL implementation of Gyroscope Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: existence and properties of interface prototype object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: existence and properties of interface prototype object's @@unscopables property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: attribute activated",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for activated property on Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: attribute hasReading",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for hasReading property on Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: attribute timestamp",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for timestamp property on Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: operation start()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for start() on Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: operation stop()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for stop() on Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: attribute onreading",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for onreading property on Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: attribute onactivate",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for onactivate property on Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: attribute onerror",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for onerror property on Sensor",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: existence and properties of interface prototype object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: existence and properties of interface prototype object's @@unscopables property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: attribute x",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for x property on Gyroscope",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: attribute y",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for y property on Gyroscope",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: attribute z",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Unscopable handled correctly for z property on Gyroscope",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope must be primary interface of new Gyroscope();",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of new Gyroscope();",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: new Gyroscope(); must inherit property \"x\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: new Gyroscope(); must inherit property \"y\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Gyroscope interface: new Gyroscope(); must inherit property \"z\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: new Gyroscope(); must inherit property \"activated\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: new Gyroscope(); must inherit property \"hasReading\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: new Gyroscope(); must inherit property \"timestamp\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: new Gyroscope(); must inherit property \"start()\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: new Gyroscope(); must inherit property \"stop()\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: new Gyroscope(); must inherit property \"onreading\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: new Gyroscope(); must inherit property \"onactivate\" with the proper type",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Sensor interface: new Gyroscope(); must inherit property \"onerror\" with the proper type",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/gyroscope/Gyroscope_onerror-manual.https.html",
      "subtests": [
        {
          "name": "Gyroscope: 'onerror' event is fired when sensor is not supported",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}
