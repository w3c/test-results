{
  "results": [
    {
      "test": "/presentation-api/controlling-ua/PresentationRequest_error.html",
      "subtests": [
        {
          "name": "Call PresentationRequest() constructor without presentation URL. TypeError Exception expected.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Call PresentationRequest() constructor with null presentation URL. TypeError Exception expected.",
          "status": "FAIL",
          "message": "assert_throws: function \"function () {\n            new PresentationRequest(wrong_presentation_url);\n        }\" did not throw"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/presentation-api/controlling-ua/PresentationRequest_success.html",
      "subtests": [
        {
          "name": "Call PresentationRequest() constructor with valid presentation URL. No Exception expected.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/presentation-api/controlling-ua/getAvailability.html",
      "subtests": [
        {
          "name": "The request is an Promise.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The request is an instance of PresentationRequest.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The promise is an instance of PresentationAvailability",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The availability has an boolean value.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "There is an availability.",
          "status": "FAIL",
          "message": "assert_true: expected true got false"
        },
        {
          "name": "There is no availability for an invalid presentation URL.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/presentation-api/controlling-ua/idlharness.html",
      "subtests": [
        {
          "name": "Navigator interface: attribute presentation",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Presentation interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Presentation interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Presentation interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Presentation interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "assert_equals: class string of Presentation.prototype expected \"[object PresentationPrototype]\" but got \"[object Presentation]\""
        },
        {
          "name": "Presentation interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Presentation interface: attribute defaultRequest",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Presentation must be primary interface of navigator.presentation",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of navigator.presentation",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Presentation interface: navigator.presentation must inherit property \"defaultRequest\" with the proper type (0)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "assert_equals: class string of PresentationRequest.prototype expected \"[object PresentationRequestPrototype]\" but got \"[object PresentationRequest]\""
        },
        {
          "name": "PresentationRequest interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface: operation start()",
          "status": "FAIL",
          "message": "assert_unreached: Throws \"TypeError: Illegal invocation\" instead of rejecting promise Reached unreachable code"
        },
        {
          "name": "PresentationRequest interface: operation reconnect(DOMString)",
          "status": "FAIL",
          "message": "assert_unreached: Throws \"TypeError: Illegal invocation\" instead of rejecting promise Reached unreachable code"
        },
        {
          "name": "PresentationRequest interface: operation getAvailability()",
          "status": "FAIL",
          "message": "assert_unreached: Throws \"TypeError: Illegal invocation\" instead of rejecting promise Reached unreachable code"
        },
        {
          "name": "PresentationRequest interface: attribute onconnectionavailable",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of navigator.presentation.defaultRequest",
          "status": "FAIL",
          "message": "assert_equals: class string of navigator.presentation.defaultRequest expected \"[object PresentationRequest]\" but got \"[object Null]\""
        },
        {
          "name": "PresentationRequest interface: navigator.presentation.defaultRequest must inherit property \"start\" with the proper type (0)",
          "status": "FAIL",
          "message": "Cannot use 'in' operator to search for 'hasOwnProperty' in null"
        },
        {
          "name": "PresentationRequest interface: navigator.presentation.defaultRequest must inherit property \"reconnect\" with the proper type (1)",
          "status": "FAIL",
          "message": "Cannot use 'in' operator to search for 'hasOwnProperty' in null"
        },
        {
          "name": "PresentationRequest interface: calling reconnect(DOMString) on navigator.presentation.defaultRequest with too few arguments must throw TypeError",
          "status": "FAIL",
          "message": "Cannot use 'in' operator to search for 'hasOwnProperty' in null"
        },
        {
          "name": "PresentationRequest interface: navigator.presentation.defaultRequest must inherit property \"getAvailability\" with the proper type (2)",
          "status": "FAIL",
          "message": "Cannot use 'in' operator to search for 'hasOwnProperty' in null"
        },
        {
          "name": "PresentationRequest interface: navigator.presentation.defaultRequest must inherit property \"onconnectionavailable\" with the proper type (3)",
          "status": "FAIL",
          "message": "Cannot use 'in' operator to search for 'hasOwnProperty' in null"
        },
        {
          "name": "PresentationRequest must be primary interface of new PresentationRequest(\"/presentation-api/receiving-ua/idlharness.html\")",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Stringification of new PresentationRequest(\"/presentation-api/receiving-ua/idlharness.html\")",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface: new PresentationRequest(\"/presentation-api/receiving-ua/idlharness.html\") must inherit property \"start\" with the proper type (0)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface: new PresentationRequest(\"/presentation-api/receiving-ua/idlharness.html\") must inherit property \"reconnect\" with the proper type (1)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface: calling reconnect(DOMString) on new PresentationRequest(\"/presentation-api/receiving-ua/idlharness.html\") with too few arguments must throw TypeError",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface: new PresentationRequest(\"/presentation-api/receiving-ua/idlharness.html\") must inherit property \"getAvailability\" with the proper type (2)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationRequest interface: new PresentationRequest(\"/presentation-api/receiving-ua/idlharness.html\") must inherit property \"onconnectionavailable\" with the proper type (3)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationAvailability interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationAvailability interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationAvailability interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationAvailability interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "assert_equals: class string of PresentationAvailability.prototype expected \"[object PresentationAvailabilityPrototype]\" but got \"[object PresentationAvailability]\""
        },
        {
          "name": "PresentationAvailability interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationAvailability interface: attribute value",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationAvailability interface: attribute onchange",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnectionAvailableEvent interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnectionAvailableEvent interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnectionAvailableEvent interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnectionAvailableEvent interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "assert_equals: class string of PresentationConnectionAvailableEvent.prototype expected \"[object PresentationConnectionAvailableEventPrototype]\" but got \"[object PresentationConnectionAvailableEvent]\""
        },
        {
          "name": "PresentationConnectionAvailableEvent interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnectionAvailableEvent interface: attribute connection",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: existence and properties of interface object",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface object length",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface object name",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "assert_equals: class string of PresentationConnection.prototype expected \"[object PresentationConnectionPrototype]\" but got \"[object PresentationConnection]\""
        },
        {
          "name": "PresentationConnection interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: attribute id",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: attribute state",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: operation close()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: operation terminate()",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: attribute onconnect",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: attribute onclose",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: attribute onterminate",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: attribute binaryType",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: attribute onmessage",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: operation send(DOMString)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: operation send(Blob)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: operation send(ArrayBuffer)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnection interface: operation send(ArrayBufferView)",
          "status": "PASS",
          "message": null
        },
        {
          "name": "PresentationConnectionClosedEvent interface: existence and properties of interface object",
          "status": "FAIL",
          "message": "assert_own_property: self does not have own property \"PresentationConnectionClosedEvent\" expected property \"PresentationConnectionClosedEvent\" missing"
        },
        {
          "name": "PresentationConnectionClosedEvent interface object length",
          "status": "FAIL",
          "message": "assert_own_property: self does not have own property \"PresentationConnectionClosedEvent\" expected property \"PresentationConnectionClosedEvent\" missing"
        },
        {
          "name": "PresentationConnectionClosedEvent interface object name",
          "status": "FAIL",
          "message": "assert_own_property: self does not have own property \"PresentationConnectionClosedEvent\" expected property \"PresentationConnectionClosedEvent\" missing"
        },
        {
          "name": "PresentationConnectionClosedEvent interface: existence and properties of interface prototype object",
          "status": "FAIL",
          "message": "assert_own_property: self does not have own property \"PresentationConnectionClosedEvent\" expected property \"PresentationConnectionClosedEvent\" missing"
        },
        {
          "name": "PresentationConnectionClosedEvent interface: existence and properties of interface prototype object's \"constructor\" property",
          "status": "FAIL",
          "message": "assert_own_property: self does not have own property \"PresentationConnectionClosedEvent\" expected property \"PresentationConnectionClosedEvent\" missing"
        },
        {
          "name": "PresentationConnectionClosedEvent interface: attribute reason",
          "status": "FAIL",
          "message": "assert_own_property: self does not have own property \"PresentationConnectionClosedEvent\" expected property \"PresentationConnectionClosedEvent\" missing"
        },
        {
          "name": "PresentationConnectionClosedEvent interface: attribute message",
          "status": "FAIL",
          "message": "assert_own_property: self does not have own property \"PresentationConnectionClosedEvent\" expected property \"PresentationConnectionClosedEvent\" missing"
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/presentation-api/controlling-ua/startNewPresentation_error.html",
      "subtests": [
        {
          "name": "The presentation could not start, because a user gesture is required.",
          "status": "FAIL",
          "message": "promise_test: Unhandled rejection with value: object \"ReferenceError: InvalidAccessError is not defined\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/presentation-api/controlling-ua/PresentationConnection_onclosed-manual.html",
      "subtests": [],
      "status": "FAIL",
      "message": ""
    },
    {
      "test": "/presentation-api/controlling-ua/PresentationConnection_onconnected-manual.html",
      "subtests": [],
      "status": "FAIL",
      "message": ""
    },
    {
      "test": "/presentation-api/controlling-ua/PresentationConnection_onterminated-manual.html",
      "subtests": [],
      "status": "FAIL",
      "message": ""
    },
    {
      "test": "/presentation-api/controlling-ua/reconnectToPresentation_error-manual.html",
      "subtests": [
        {
          "name": "Check that the promise is rejected by wrong presentation Id",
          "status": "FAIL",
          "message": "promise_test: Unhandled rejection with value: object \"NotFoundError: No matching route\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/presentation-api/controlling-ua/reconnectToPresentation_success-manual.html",
      "subtests": [
        {
          "name": "The reconnection was successful.",
          "status": "FAIL",
          "message": "promise_test: Unhandled rejection with value: object \"NotFoundError: No matching route\""
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/presentation-api/controlling-ua/startNewPresentation_error-manual.html",
      "subtests": [
        {
          "name": "The starting process for the presentation has been aborted.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Check, if the error code is correct.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "Check, if the error message is correct.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    },
    {
      "test": "/presentation-api/controlling-ua/startNewPresentation_success-manual.html",
      "subtests": [
        {
          "name": "The presentation was started successfully.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The connection ID is set.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The connection ID is a string.",
          "status": "PASS",
          "message": null
        },
        {
          "name": "The connection is an instance of PresentationConnection.",
          "status": "PASS",
          "message": null
        }
      ],
      "status": "OK",
      "message": null
    }
  ]
}